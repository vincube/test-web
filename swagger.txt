{
  "openapi": "3.0.1",
  "info": {
    "title": "Aplata.Server API (RU)",
    "description": "## Авторизация (получение токена для последующих запросов)\r\n\r\n**Запрос:**\r\n\r\n**GET** https://api.vendista.ru:99/token?login=`login`&password=`password`\r\n\r\n- `login` - логин пользователя\r\n\r\n- `password` - пароль пользователя\r\n\r\n**Ответ при успешной авторизации:**\r\n\r\n```json\r\n{\r\n  \"token\": \"<token>\"\r\n}\r\n```\r\n\r\n## Формат данных\r\n\r\nЗапросы отправляются через RESTful API следующими методами:\r\n\r\n- **GET** - получение данных.\r\n\r\n- **POST** - добавление элемента.\r\n\r\n- **PUT** - изменение элемента.\r\n\r\n- **DELETE** - удаление элемента.\r\n\r\nВ документации встречаются фигурные скобки - `{}`, в которых указывается название параметра, описания этого параметра доступно после клика на нужный запрос.\r\n\r\nВсе URL-адреса и тела запросов чувствительны к регистру. Содержимое запроса и ответа в формате JSON.\r\n\r\n## Статус коды\r\n\r\nВ следующей таблице приведены наиболее распространенные коды состояния HTTP. Если возможен другой код, он будет указан в запросе.\r\n\r\n| Код | Описание                       |\r\n| --- | ------------------------------ |\r\n| 200 | Успешный запрос                |\r\n| 400 | Некорректные входящие данные   |\r\n| 401 | Необходима авторизация         |\r\n| 402 | Требуется оплата\t           |\r\n| 403 | Нет прав доступа к содержимому |\r\n| 404 | Запись не найдена              |\r\n| 409 | Запись уже существует          |\r\n| 429 | Превышено количество запросов  |\r\n| 500 | Ошибка сервера                 |\r\n| 503 | Внешний сервис недоступен      |\r\n",
    "version": "v1"
  },
  "paths": {
    "/azsproviders": {
      "post": {
        "tags": [
          "AzsProviders"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbAzsProvider"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbAzsProvider"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbAzsProvider"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbAzsProvider"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderItemResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AzsProviders"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "TerminalId",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/azsproviders/{id}": {
      "get": {
        "tags": [
          "AzsProviders"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AzsProviders"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbAzsProvider"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbAzsProvider"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbAzsProvider"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbAzsProvider"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbAzsProviderItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AzsProviders"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/banks": {
      "get": {
        "tags": [
          "Banks"
        ],
        "summary": "Получить список банков-экваеров",
        "parameters": [
          {
            "name": "VisibleOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBankBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBankBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBankBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/banks/iban/{bik}": {
      "get": {
        "tags": [
          "Banks"
        ],
        "summary": "Получить реквизиты банка по БИК",
        "parameters": [
          {
            "name": "bik",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BankInfoItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankInfoItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankInfoItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/bonusaccounts": {
      "get": {
        "tags": [
          "BonusAccounts"
        ],
        "summary": "Получить список доступных бонусных счетов",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BonusAccounts"
        ],
        "summary": "Создать бонусный счет",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BonusAccountCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BonusAccountCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BonusAccountCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BonusAccountCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/bonusaccounts/{id}/transactions": {
      "get": {
        "tags": [
          "BonusAccounts"
        ],
        "summary": "Получить транзакции по бонусному счету покупателя",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TermId",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusTransactionBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusTransactionBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusTransactionBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BonusAccounts"
        ],
        "summary": "Пополнить или уменьшить баланс бонусного счета",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BonusBalanceChangeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BonusBalanceChangeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BonusBalanceChangeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BonusBalanceChangeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/bonusaccounts/{id}": {
      "get": {
        "tags": [
          "BonusAccounts"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BonusAccounts"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BonusAccountUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BonusAccountUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BonusAccountUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BonusAccountUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBonusAccountItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/breakreasons": {
      "get": {
        "tags": [
          "BreakReasons"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBreakReasonBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBreakReasonBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBreakReasonBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/breaksymptoms": {
      "get": {
        "tags": [
          "BreakSymptoms"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBreakSymptomBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBreakSymptomBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBreakSymptomBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/businesstypes": {
      "get": {
        "tags": [
          "BusinessTypes"
        ],
        "summary": "Получить список доступных типов деятельности ",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbBusinessTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBusinessTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbBusinessTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/commands/types": {
      "get": {
        "tags": [
          "Commands"
        ],
        "summary": "Получить список доступных типов команд",
        "parameters": [
          {
            "name": "VisibleOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/commandstatetypes": {
      "get": {
        "tags": [
          "CommandStateTypes"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandStateTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandStateTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandStateTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbCountryBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCountryBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCountryBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/cultures": {
      "get": {
        "tags": [
          "Cultures"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbCatalogItemBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCatalogItemBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCatalogItemBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbCurrencyBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCurrencyBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCurrencyBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/damia/inn/{inn}": {
      "get": {
        "tags": [
          "DaMIA"
        ],
        "summary": "Получить ОКТМО, ОКАТО организации по ИНН",
        "parameters": [
          {
            "name": "inn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInfo_DaMIA"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInfo_DaMIA"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInfo_DaMIA"
                }
              }
            }
          }
        }
      }
    },
    "/discountsqr": {
      "get": {
        "tags": [
          "DiscountsQr"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DiscountsQr"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountQrCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountQrCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountQrCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountQrCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/discountsqr/{id}": {
      "get": {
        "tags": [
          "DiscountsQr"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiscountsQr"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountQrUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountQrUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountQrUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountQrUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDiscountsQrItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DiscountsQr"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/divisions": {
      "get": {
        "tags": [
          "Divisions"
        ],
        "summary": "Получить список доступных подразделений",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Divisions"
        ],
        "summary": "Добавить подразделение",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/divisions/{id}": {
      "get": {
        "tags": [
          "Divisions"
        ],
        "summary": "Получить подразделение по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Divisions"
        ],
        "summary": "Редактировать подразделение",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DivisionUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbDivisionItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Divisions"
        ],
        "summary": "Удалить подразделение",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/encashment": {
      "get": {
        "tags": [
          "Encashment"
        ],
        "summary": "Получить список инкассаций",
        "parameters": [
          {
            "name": "MachineId",
            "in": "query",
            "description": "Идентификатор автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Micromarket",
            "in": "query",
            "description": "Показывать только микромаркеты",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbEncashItemEncashTotalTotalQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbEncashItemEncashTotalTotalQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbEncashItemEncashTotalTotalQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Получить список всех событий",
        "parameters": [
          {
            "name": "MachineId",
            "in": "query",
            "description": "Идентификатор автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Micromarket",
            "in": "query",
            "description": "Показывать только микромаркеты",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbEventEventTotalTotalQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbEventEventTotalTotalQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbEventEventTotalTotalQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/eventtypes": {
      "get": {
        "tags": [
          "EventTypes"
        ],
        "summary": "Получить список типов событий",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbEventTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbEventTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbEventTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/externalserver": {
      "get": {
        "tags": [
          "ExternalServer"
        ],
        "summary": "Получить список доступных внешних серверов",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbExternalServerBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbExternalServerBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbExternalServerBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/flasherintervals": {
      "get": {
        "tags": [
          "FlasherIntervals"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FlasherIntervals"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FlasherIntervalsCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlasherIntervalsCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FlasherIntervalsCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FlasherIntervalsCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/flasherintervals/{id}": {
      "get": {
        "tags": [
          "FlasherIntervals"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FlasherIntervals"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FlasherIntervalsUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlasherIntervalsUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FlasherIntervalsUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FlasherIntervalsUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFlasherIntervalItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FlasherIntervals"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/fns/inn/{inn}": {
      "get": {
        "tags": [
          "Fns"
        ],
        "summary": "Получить данные организации по ИНН",
        "parameters": [
          {
            "name": "inn",
            "in": "path",
            "description": "ИНН организации",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInfoWithInn"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInfoWithInn"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInfoWithInn"
                }
              }
            }
          }
        }
      }
    },
    "/fwtypes": {
      "get": {
        "tags": [
          "FwTypes"
        ],
        "summary": "Получить список доступных типов прошивок",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbFwTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFwTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbFwTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/ingredients": {
      "get": {
        "tags": [
          "Ingredients"
        ],
        "summary": "Получить список доступных ингредиентов",
        "parameters": [
          {
            "name": "ShowProducts",
            "in": "query",
            "description": "Показать штучный товар",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ingredients"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/ingredients/{id}": {
      "get": {
        "tags": [
          "Ingredients"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ingredients"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IngredientCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbIngredientItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ingredients"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/kassaproviders": {
      "get": {
        "tags": [
          "KassaProviders"
        ],
        "summary": "Получить список доступных провайдеров облачных касс",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaProviderBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaProviderBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaProviderBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/kassas": {
      "get": {
        "tags": [
          "Kassas"
        ],
        "summary": "Получить список касс пользователя",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Kassas"
        ],
        "summary": "Добавить кассу",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/KassaCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KassaCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/KassaCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/KassaCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/kassas/{id}": {
      "get": {
        "tags": [
          "Kassas"
        ],
        "summary": "Получить кассу по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Kassas"
        ],
        "summary": "Редактировать данные кассы",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/KassaCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KassaCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/KassaCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/KassaCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKassaItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Kassas"
        ],
        "summary": "Удалить кассу",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/knowledgebasearticles": {
      "get": {
        "tags": [
          "KnowledgeBaseArticles"
        ],
        "summary": "Получить список статей из Базы Знаний",
        "parameters": [
          {
            "name": "CategoryId",
            "in": "query",
            "description": "Id Категории",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "KnowledgeBaseArticles"
        ],
        "summary": "Добавить статью в Базу Знаний",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/knowledgebasearticles/{id}": {
      "get": {
        "tags": [
          "KnowledgeBaseArticles"
        ],
        "summary": "Получить из Базы Знаний статью по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "KnowledgeBaseArticles"
        ],
        "summary": "Изменить статью в Базе Знаний",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseArticleItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KnowledgeBaseArticles"
        ],
        "summary": "Удалить статью из Базы Знаний",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/knowledgebasecategories": {
      "get": {
        "tags": [
          "KnowledgeBaseCategories"
        ],
        "summary": "Получить список категорий из Базы Знаний",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "KnowledgeBaseCategories"
        ],
        "summary": "Добавить категории в Базу Знаний",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/knowledgebasecategories/{id}": {
      "get": {
        "tags": [
          "KnowledgeBaseCategories"
        ],
        "summary": "Получить из Базы Знаний категорию по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "KnowledgeBaseCategories"
        ],
        "summary": "Изменить категорию в Базе Знаний",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbKnowledgeBaseCategoryItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KnowledgeBaseCategories"
        ],
        "summary": "Удалить категорию из Базы Знаний",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinemodelfirmwares": {
      "get": {
        "tags": [
          "MachineModelFirmwares"
        ],
        "summary": "Получить список прошивок автоматов",
        "parameters": [
          {
            "name": "ModelId",
            "in": "query",
            "description": "Id модели автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MachineModelFirmwares"
        ],
        "summary": "Добавить прошивку модели автомата",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelFirmware"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelFirmware"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelFirmware"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelFirmware"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinemodelfirmwares/{id}": {
      "get": {
        "tags": [
          "MachineModelFirmwares"
        ],
        "summary": "Получить прошивку модели автомата по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineModelFirmwares"
        ],
        "summary": "Редактировать прошивку модели автомата",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelFirmware"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelFirmware"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelFirmware"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelFirmware"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelFirmwareItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineModelFirmwares"
        ],
        "summary": "Удалить прошивку модели автомата",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinemodelmanufacturers": {
      "get": {
        "tags": [
          "MachineModelManufacturers"
        ],
        "summary": "Получить список производителей автоматов",
        "parameters": [
          {
            "name": "TypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MachineModelManufacturers"
        ],
        "summary": "Добавить производителя автоматов",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelManufacturer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelManufacturer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelManufacturer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelManufacturer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinemodelmanufacturers/{id}": {
      "get": {
        "tags": [
          "MachineModelManufacturers"
        ],
        "summary": "Получить производителя автоматов по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineModelManufacturers"
        ],
        "summary": "Редактировать производителей автомата",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelManufacturer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelManufacturer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelManufacturer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelManufacturer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelManufacturerItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineModelManufacturers"
        ],
        "summary": "Удалить производителя автоматов",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinemodelmodels": {
      "get": {
        "tags": [
          "MachineModelModels"
        ],
        "summary": "Получить список моделей автомата",
        "parameters": [
          {
            "name": "ManufacturerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MachineModelModels"
        ],
        "summary": "Добавить модель автомата",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinemodelmodels/{id}": {
      "get": {
        "tags": [
          "MachineModelModels"
        ],
        "summary": "Получить модель автомата по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineModelModels"
        ],
        "summary": "Редактировать модель автомата",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelModelItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineModelModels"
        ],
        "summary": "Удалить модель автомата",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinemodels": {
      "get": {
        "tags": [
          "MachineModels"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelBaseQueryResult"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "MachineModels"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelItemResult"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/machinemodels/{id}": {
      "get": {
        "tags": [
          "MachineModels"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelItemResult"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "MachineModels"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelItemResult"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [
          "MachineModels"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/machinemodeltypes": {
      "get": {
        "tags": [
          "MachineModelTypes"
        ],
        "summary": "Получить список типов подключений автоматов",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MachineModelTypes"
        ],
        "summary": "Добавить тип подключения автомата",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelType"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinemodeltypes/{id}": {
      "get": {
        "tags": [
          "MachineModelTypes"
        ],
        "summary": "Получить тип подключения автомата по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineModelTypes"
        ],
        "summary": "Редактировать тип подключения автомата",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelType"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachineModelType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineModelTypeItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineModelTypes"
        ],
        "summary": "Удалить тип подключения автомата",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/machines": {
      "get": {
        "tags": [
          "Machines"
        ],
        "summary": "Получить список доступных автоматов",
        "parameters": [
          {
            "name": "Micromarket",
            "in": "query",
            "description": "Показывать только микромаркеты",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowWorking",
            "in": "query",
            "description": "Показывать работающие автоматы",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowWarning",
            "in": "query",
            "description": "Показывать автоматы с проблемами",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowFailed",
            "in": "query",
            "description": "Показывать неработающие автоматы",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ModelId",
            "in": "query",
            "description": "Id модели автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Stat",
            "in": "query",
            "description": "Показывать статистику продаж",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineMachineTotalTotalQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineMachineTotalTotalQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineMachineTotalTotalQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Machines"
        ],
        "summary": "Добавить автомат",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachine"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachine"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachine"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachine"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/machines/{id}": {
      "get": {
        "tags": [
          "Machines"
        ],
        "summary": "Получить автомат по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Machines"
        ],
        "summary": "Редактировать автомат",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachine"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachine"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachine"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbMachine"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Machines"
        ],
        "summary": "Удалить автомат",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/machines/{id}/ingredients": {
      "get": {
        "tags": [
          "Machines"
        ],
        "summary": "Получить список ингредиентов автомата",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineIngredientBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineIngredientBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineIngredientBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Machines"
        ],
        "summary": "Редактировать список ингредиентов автомата",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MachineIngredientListUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineIngredientListUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineIngredientListUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MachineIngredientListUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineIngredientBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineIngredientBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineIngredientBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/machines/{id}/micromarket": {
      "put": {
        "tags": [
          "Machines"
        ],
        "summary": "Загрузить список товаров для Микромаркета в автомат",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/machines/{id}/mdbprices": {
      "put": {
        "tags": [
          "Machines"
        ],
        "summary": "Подмен цен автомата в режиме MDB",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updateType",
            "in": "query",
            "description": "Режим подмены цен. Значения: 0 - По номеру товара (значение по умолчанию), 1 - По цене товара",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinestates": {
      "get": {
        "tags": [
          "MachineStates"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineStateBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineStateBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineStateBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/machinestatetypes": {
      "get": {
        "tags": [
          "MachineStateTypes"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineStateTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineStateTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMachineStateTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/mid": {
      "get": {
        "tags": [
          "Mid"
        ],
        "summary": "Получить список доступных MID",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Mid"
        ],
        "summary": "Добавить MID",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MidCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MidCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MidCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MidCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/mid/{id}": {
      "get": {
        "tags": [
          "Mid"
        ],
        "summary": "Получить MID по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Mid"
        ],
        "summary": "Изменить MID по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MidUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MidUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MidUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MidUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbMidItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/nfctags": {
      "get": {
        "tags": [
          "NfcTags"
        ],
        "summary": "Получить список Nfc меток",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NfcTags"
        ],
        "summary": "Добавить Nfc метку",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTagCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTagCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTagCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTagCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/nfctags/{id}": {
      "get": {
        "tags": [
          "NfcTags"
        ],
        "summary": "Получить Nfc метку",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id NFC метки (empty - значение для пустого id)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "empty"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NfcTags"
        ],
        "summary": "Редактировать Nfc метку",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id NFC метки (empty - значение для пустого id)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "empty"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTagUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTagUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTagUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NfcTagUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbNfcTagItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NfcTags"
        ],
        "summary": "Удалить Nfc метку",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id NFC метки (empty - значение для пустого id)",
            "required": true,
            "schema": {
              "type": "string",
              "default": "empty"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/ownerfiles/{id}/status": {
      "get": {
        "tags": [
          "OwnerFiles"
        ],
        "summary": "Получение статуса загруженных документов",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор клиента",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerFilesStatusItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerFilesStatusItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerFilesStatusItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить список всех клиентов",
        "parameters": [
          {
            "name": "WithoutClosed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerShortBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerShortBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerShortBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Изменение данных клиента",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Owner"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Owner"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Owner"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Owner"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          }
        }
      }
    },
    "/owners/ids": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить клиентов по списку Id",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerShortBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerShortBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnerShortBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/partners": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Партнеры",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfoBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfoBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfoBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/partners/shared": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Партнеры принимающие терминалы на обслуживание без согласования",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfoBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfoBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfoBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/partners/{id}": {
      "post": {
        "tags": [
          "Owners"
        ],
        "summary": "Назначить партнером",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/mainowners/{id}": {
      "post": {
        "tags": [
          "Owners"
        ],
        "summary": "Назначить головной компанией",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/mainowners/join/{id}": {
      "post": {
        "tags": [
          "Owners"
        ],
        "summary": "Присоединиться к головной компании",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить информацию о клиенте",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          }
        }
      }
    },
    "/owners/{id}/changepartner": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Изменить партнера клиента",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOwnerPartnerModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOwnerPartnerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOwnerPartnerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOwnerPartnerModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          }
        }
      }
    },
    "/owners/{id}/fns": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Обновить данные из ФНС",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          }
        }
      }
    },
    "/owners/create": {
      "post": {
        "tags": [
          "Owners"
        ],
        "summary": "Добавить клиента",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterOwnerModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterOwnerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterOwnerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterOwnerModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          }
        }
      }
    },
    "/owners/{id}/partnerinfo": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить информацию о партнере клиента",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfo"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/owners/{id}/support": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить контактную информацию о сервисной поддержке клиента",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactInfo"
                }
              }
            }
          }
        }
      }
    },
    "/owners/passport/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить скан паспорта. Все страницы в формате pdf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/owners/passport/page1/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить скан паспорта, страница 1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "summary": "Удалить первую страницу паспорта",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/passport/page1": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Добавить скан паспорта, страница 1",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          }
        }
      }
    },
    "/owners/passport/page2/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить скан паспорта, страница 2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "summary": "Удалить скан паспорта, страница 2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/passport/page2": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Добавить скан паспорта, страница 2",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          }
        }
      }
    },
    "/owners/leasecontract/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить договор аренды",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "summary": "Удалить договор аренды",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/leasecontract": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Добавить договор аренды",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/oferta/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить скан подписанного договора оферты",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "summary": "Удалить скан подписанного договора оферты",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/oferta": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Добавить скан подписанного договора оферты",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/pda/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить скан подписанного соглашения об обработке персональных данных",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "summary": "Удалить скан подписанного соглашения об обработке персональных данных",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/pda": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Добавить скан подписанного соглашения об обработке персональных данных",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/registrationreqvtb/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить скан заявки на регистрацию в ВТБ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "summary": "Удалить скан заявки на регистрацию ВТБ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/registrationreqvtb": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Добавить скан заявки на регистрацию ВТБ",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/сontractreqvtb/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить скан заявления на заключение договора в ВТБ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "summary": "Удалить скан заявления на заключение договора в ВТБ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/сontractreqvtb": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Добавить скан заявления на заключение договора в ВТБ",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/pdablank/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить текст соглашения об обработке персональных данных",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/owners/ofertablank/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить текст договора оферты",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/owners/guaranteeletter/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить текст гарантийного письма (договор аренды)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/owners/guaranteelettervtb/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить текст гарантийного письма для ВТБ (договор аренды)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/owners/registrationreqvtbblank/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить текст заявки на регистрацию в ВТБ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/owners/сontractreqvtbblank/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Получить текст заявления на заключение договора в ВТБ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/owners/sendtobank": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Запросить проверку и отправку документов в банк",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/{id}/assign_terminals": {
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Передача терминалов клиенту. Возвращает id терминалов, которые не удалось передать.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32ArrayItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32ArrayItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32ArrayItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/create_by_mac": {
      "post": {
        "tags": [
          "Owners"
        ],
        "summary": "Добавить клиента и привязать терминал",
        "parameters": [
          {
            "name": "mac",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ShortRegisterOwnerModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShortRegisterOwnerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShortRegisterOwnerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ShortRegisterOwnerModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/owners/exist": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Проверка наличия клиента с указанным ИНН",
        "parameters": [
          {
            "name": "inn",
            "in": "query",
            "description": "ИНН клиента",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/packetlog/{terminalId}": {
      "get": {
        "tags": [
          "PacketLog"
        ],
        "summary": "Получить пакеты из PacketLog по id терминала за период",
        "parameters": [
          {
            "name": "terminalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsPingsShown",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FilterPacketType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketLogBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/password": {
      "post": {
        "tags": [
          "Password"
        ],
        "summary": "Запросить смену пароля",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPasswordRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Password"
        ],
        "summary": "Установить пароль, использую полученный код",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPassword"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPassword"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPassword"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/paymaster/payments": {
      "post": {
        "tags": [
          "PayMaster"
        ],
        "summary": "Запрос ссылки на пополнение баланса ЛК",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "description": "В копейках. Мин значение 100 (это 1.00 р.)",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 100,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "description": "1 - Банковская карта; 2 - СБП; 3 - Qiwi, 0 - На выбор",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expiresDate",
            "in": "query",
            "description": "Срок действия ссылки на оплату",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "autopayment",
            "in": "query",
            "description": "Подключить автоплатеж для пополнения баланса ЛК",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/paymaster/payments/{id}/status": {
      "get": {
        "tags": [
          "PayMaster"
        ],
        "summary": "Статус платежа (запрос в PayMaster)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/paymaster/payments/subscription": {
      "post": {
        "tags": [
          "PayMaster"
        ],
        "summary": "Запрос ссылки на оплату подписки/платежа",
        "parameters": [
          {
            "name": "subscriptionTypeId",
            "in": "query",
            "description": "5 - Подключение эквайринга",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "description": "1 - Банковская карта; 2 - СБП; 3 - Qiwi, 0 - На выбор",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expiresDate",
            "in": "query",
            "description": "Срок действия ссылки на оплату",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "isForce",
            "in": "query",
            "description": "Принудительное формирование новой ссылки",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/paymaster/payments/prepay": {
      "post": {
        "tags": [
          "PayMaster"
        ],
        "summary": "Запрос ссылки на предоплату для незарегистрированного клиента (работает только для бухгалтера)",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "description": "Сумма платежа",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 100,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Информация о клиенте, назначение платежа",
            "required": true,
            "schema": {
              "minLength": 3,
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "description": "1 - Банковская карта; 2 - СБП; 3 - Qiwi, 0 - На выбор",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "expiresDate",
            "in": "query",
            "description": "Срок действия ссылки на оплату",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/paymaster/paytokens": {
      "post": {
        "tags": [
          "PayMaster"
        ],
        "summary": "Запрос ссылки на регистрацию автоплатежа",
        "parameters": [
          {
            "name": "subscriptionTypeId",
            "in": "query",
            "description": "Тип подписки/платежа. Поддерживаются: 3 - Абонентская плата за процессинг",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "description": "Тип оплаты",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/paymaster/paytokens/{id}/status": {
      "get": {
        "tags": [
          "PayMaster"
        ],
        "summary": "Статус автоплатежа (запрос в PayMaster)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/paymaster/paytokens/subscription/{typeId}": {
      "get": {
        "tags": [
          "PayMaster"
        ],
        "summary": "Получить активный автоплатеж для типа подписки/платежа",
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "description": "Тип подписки/платежа",
            "required": true,
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/paymaster/paytokens/{id}/cancel": {
      "put": {
        "tags": [
          "PayMaster"
        ],
        "summary": "Отменить автоплатеж",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/processingtypes": {
      "get": {
        "tags": [
          "ProcessingTypes"
        ],
        "summary": "Получить список доступных типов процессинга",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbProcessingTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProcessingTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProcessingTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/productmatrix": {
      "get": {
        "tags": [
          "ProductMatrix"
        ],
        "summary": "Получить список доступных матриц",
        "parameters": [
          {
            "name": "Micromarket",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductMatrix"
        ],
        "summary": "Добавить матрицу",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbProductMatrix"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbProductMatrix"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbProductMatrix"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbProductMatrix"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/productmatrix/{id}": {
      "get": {
        "tags": [
          "ProductMatrix"
        ],
        "summary": "Получить матрицу по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductMatrix"
        ],
        "summary": "Редактировать матрицу",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbProductMatrix"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbProductMatrix"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbProductMatrix"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbProductMatrix"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductMatrixItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductMatrix"
        ],
        "summary": "Удалить матрицу",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Получить список доступных товаров",
        "parameters": [
          {
            "name": "Micromarket",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Добавить товар",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Получить товар по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Редактировать товар",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbProductItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Удалить товар",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/qrproviders": {
      "get": {
        "tags": [
          "QrProviders"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrProviderBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrProviderBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrProviderBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/qrsettings": {
      "get": {
        "tags": [
          "QrSettings"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "QrSettings"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/QrSettingsCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QrSettingsCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QrSettingsCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/QrSettingsCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/qrsettings/{id}": {
      "get": {
        "tags": [
          "QrSettings"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "QrSettings"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/QrSettingsCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QrSettingsCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QrSettingsCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/QrSettingsCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQrSettingsItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QrSettings"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/quickanswers": {
      "get": {
        "tags": [
          "QuickAnswers"
        ],
        "summary": "Получить список быстрых ответов",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "QuickAnswers"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbQuickAnswer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbQuickAnswer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbQuickAnswer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbQuickAnswer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/quickanswers/{id}": {
      "get": {
        "tags": [
          "QuickAnswers"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "QuickAnswers"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbQuickAnswer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbQuickAnswer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbQuickAnswer"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbQuickAnswer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbQuickAnswerItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QuickAnswers"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Получить список доступных рецептов",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbRecipe"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbRecipe"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbRecipe"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbRecipe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/recipes/{id}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DbRecipe"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbRecipe"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbRecipe"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbRecipe"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRecipeItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/repairlocations": {
      "get": {
        "tags": [
          "RepairLocations"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbRepairLocationBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRepairLocationBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbRepairLocationBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/replenishments": {
      "get": {
        "tags": [
          "Replenishments"
        ],
        "summary": "Получить ответ по загрузкам ингредиентов",
        "parameters": [
          {
            "name": "MachineId",
            "in": "query",
            "description": "Идентификатор автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Micromarket",
            "in": "query",
            "description": "Показывать только микромаркеты",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbReplenishmentBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbReplenishmentBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbReplenishmentBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/reports/common": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить сводный отчет",
        "parameters": [
          {
            "name": "DivisionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProcessingIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "TermId",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommonReportResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonReportResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonReportResult"
                }
              }
            }
          }
        }
      }
    },
    "/reports/subscription_fee": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить отчет по абонентской плате",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExternalServerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionFeeReportResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionFeeReportResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionFeeReportResult"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/reports/subscriptionfee": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить отчет по абонентской плате",
        "parameters": [
          {
            "name": "Year",
            "in": "query",
            "description": "Год",
            "required": true,
            "schema": {
              "maximum": 2100,
              "minimum": 2020,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Month",
            "in": "query",
            "description": "Месяц",
            "required": true,
            "schema": {
              "maximum": 12,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExternalServerId",
            "in": "query",
            "description": "ID внешнего сервера",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionFeeReportResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionFeeReportResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionFeeReportResult"
                }
              }
            }
          }
        }
      }
    },
    "/reports/transactions_duration": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить отчет по длительности транзакций",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "processingIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsDurationReportResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsDurationReportResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsDurationReportResult"
                }
              }
            }
          }
        }
      }
    },
    "/reports/gsm_quality": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить отчет по провалам GSM",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GSMQualityReportRowBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GSMQualityReportRowBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GSMQualityReportRowBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/reports/operators/common": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить отчет по операторам за период",
        "parameters": [
          {
            "name": "Operator",
            "in": "query",
            "description": "Оператор (Users.Id)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShowDisabled",
            "in": "query",
            "description": "Показывать отключенных",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowDeleted",
            "in": "query",
            "description": "Показать удаленных операторов",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorsCommonReportResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorsCommonReportResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorsCommonReportResult"
                }
              }
            }
          }
        }
      }
    },
    "/reports/operators/now": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить отчет операторам на текущую дату",
        "parameters": [
          {
            "name": "Operator",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorsNowReportResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorsNowReportResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorsNowReportResult"
                }
              }
            }
          }
        }
      }
    },
    "/reports/operators/scores": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить отчет оценок по операторам за период",
        "parameters": [
          {
            "name": "Operator",
            "in": "query",
            "description": "Оператор (Users.Id)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShowDisabled",
            "in": "query",
            "description": "Показывать отключенных",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowDeleted",
            "in": "query",
            "description": "Показать удаленных операторов",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorsScoresReportResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorsScoresReportResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorsScoresReportResult"
                }
              }
            }
          }
        }
      }
    },
    "/reports/tickettypes/common": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить отчет по типам заявок за период",
        "parameters": [
          {
            "name": "TicketType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TicketType"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TicketTypesCommonReportResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketTypesCommonReportResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketTypesCommonReportResult"
                }
              }
            }
          }
        }
      }
    },
    "/reports/terminals/service": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Отчет по терминалам для техподдержки",
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "description": "Вариант сборки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FwType",
            "in": "query",
            "description": "Вариант прошивки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MainMode",
            "in": "query",
            "description": "Основной режим",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BootloaderVersion",
            "in": "query",
            "description": "Версия загрузчика",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Version",
            "in": "query",
            "description": "Версия прошивки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OnlineLastDays",
            "in": "query",
            "description": "Онлайн за последние X дней",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalsServiceReportRowBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalsServiceReportRowBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalsServiceReportRowBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "cultureId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "keys",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales/graph": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Список для графиков продаж",
        "parameters": [
          {
            "name": "SellTypes",
            "in": "query",
            "description": "1 - продажа за нал, 2 - продажа за безнал, 3 - продажа за внешний кредит, 4 - продажа за бонусы, 99 - неудачная продажа (по-умолчанию (1,2,3))",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ShowDeleted",
            "in": "query",
            "description": "Показывать историю по удаленным автоматам",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsReturn",
            "in": "query",
            "description": "Признак возврата (по-умолчанию false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MachineId",
            "in": "query",
            "description": "Идентификатор автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Micromarket",
            "in": "query",
            "description": "Показывать только микромаркеты",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleGraphBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleGraphBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleGraphBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/sales/list": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Получить список продаж",
        "parameters": [
          {
            "name": "SellTypes",
            "in": "query",
            "description": "1 - продажа за нал, 2 - продажа за безнал, 3 - продажа за внешний кредит, 4 - продажа за бонусы, 99 - неудачная продажа (по-умолчанию (1,2,3))",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ShowDeleted",
            "in": "query",
            "description": "Показывать историю по удаленным автоматам",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsReturn",
            "in": "query",
            "description": "Признак возврата (по-умолчанию false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MachineId",
            "in": "query",
            "description": "Идентификатор автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Micromarket",
            "in": "query",
            "description": "Показывать только микромаркеты",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/sales": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Итоги продаж",
        "parameters": [
          {
            "name": "SellTypes",
            "in": "query",
            "description": "1 - продажа за нал, 2 - продажа за безнал, 3 - продажа за внешний кредит, 4 - продажа за бонусы, 99 - неудачная продажа (по-умолчанию (1,2,3))",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ShowDeleted",
            "in": "query",
            "description": "Показывать историю по удаленным автоматам",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsReturn",
            "in": "query",
            "description": "Признак возврата (по-умолчанию false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MachineId",
            "in": "query",
            "description": "Идентификатор автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Micromarket",
            "in": "query",
            "description": "Показывать только микромаркеты",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleByMachineDbSaleByMachineTotalTotalQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleByMachineDbSaleByMachineTotalTotalQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleByMachineDbSaleByMachineTotalTotalQueryResult"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/sales/totals": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Итоги продаж",
        "parameters": [
          {
            "name": "SellTypes",
            "in": "query",
            "description": "1 - продажа за нал, 2 - продажа за безнал, 3 - продажа за внешний кредит, 4 - продажа за бонусы, 99 - неудачная продажа (по-умолчанию (1,2,3))",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ShowDeleted",
            "in": "query",
            "description": "Показывать историю по удаленным автоматам",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsReturn",
            "in": "query",
            "description": "Признак возврата (по-умолчанию false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MachineId",
            "in": "query",
            "description": "Идентификатор автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Micromarket",
            "in": "query",
            "description": "Показывать только микромаркеты",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleByMachineDbSaleByMachineTotalTotalQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleByMachineDbSaleByMachineTotalTotalQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleByMachineDbSaleByMachineTotalTotalQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/sales/products": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Итоги продаж товаров",
        "parameters": [
          {
            "name": "SellTypes",
            "in": "query",
            "description": "1 - продажа за нал, 2 - продажа за безнал, 3 - продажа за внешний кредит, 4 - продажа за бонусы, 99 - неудачная продажа (по-умолчанию (1,2,3))",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ShowDeleted",
            "in": "query",
            "description": "Показывать историю по удаленным автоматам",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsReturn",
            "in": "query",
            "description": "Признак возврата (по-умолчанию false)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MachineId",
            "in": "query",
            "description": "Идентификатор автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Micromarket",
            "in": "query",
            "description": "Показывать только микромаркеты",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleProductDbSaleProductTotalTotalQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleProductDbSaleProductTotalTotalQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSaleProductDbSaleProductTotalTotalQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/selltypes": {
      "get": {
        "tags": [
          "SellTypes"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSellTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSellTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSellTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptionfeedisablereasons": {
      "get": {
        "tags": [
          "SubscriptionFeeDisableReasons"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "VisibleOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionFeeDisableReasonBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionFeeDisableReasonBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionFeeDisableReasonBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Получить список начислений и оплат по абонентской плате",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShowEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionSubscriptionTotalTotalQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionSubscriptionTotalTotalQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionSubscriptionTotalTotalQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/balance": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Получить баланс",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ItemResult"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/subscriptions/balance/details": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Получить детализированный баланс",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionBalanceDetailsItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionBalanceDetailsItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionBalanceDetailsItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/is_active": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Получить статус подписки/платежа",
        "parameters": [
          {
            "name": "subscriptionTypeId",
            "in": "query",
            "description": "Тип платежа/подписки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionStateItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionStateItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionStateItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/pay_for": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Оплатить подписку/платеж с баланса ЛК",
        "parameters": [
          {
            "name": "subscriptionTypeId",
            "in": "query",
            "description": "Тип платежа/подписки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/chargefee": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Начислить абонентскую плату за процессинг",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionFeeSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionFeeSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionFeeSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionFeeSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Начислить абонентскую плату за процессинг",
        "parameters": [
          {
            "name": "Year",
            "in": "query",
            "description": "Год",
            "required": true,
            "schema": {
              "maximum": 2100,
              "minimum": 2020,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Month",
            "in": "query",
            "description": "Месяц",
            "required": true,
            "schema": {
              "maximum": 12,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExternalServerId",
            "in": "query",
            "description": "ID внешнего сервера",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/chargecomission": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Начислить комиссию за процессинг",
        "parameters": [
          {
            "name": "Provider",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PaymentProvider"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 2100,
              "minimum": 2020,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Month",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 12,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{id}/details": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Получить детализацию начисления абонентской платы",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionExtBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionExtBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionExtBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/chargefee/details": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Получить детализацию начислений абонентской платы",
        "parameters": [
          {
            "name": "TerminalId",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionExtBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionExtBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionExtBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/chargefee/details/csv": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Получить детализацию начислений абонентской платы в формате CSV",
        "parameters": [
          {
            "name": "TerminalId",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/subscriptiontypes": {
      "get": {
        "tags": [
          "SubscriptionTypes"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSubscriptionTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/supbotsessions": {
      "post": {
        "tags": [
          "SupBotSessions"
        ],
        "summary": "Создать сессию пользователя",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SupBotSessions"
        ],
        "summary": "Сбросить сессии пользователя",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Добавить элемент",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{id}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Получить элемент по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Редактировать элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbSupplierItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Удалить элемент",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Получить список доступных шаблонов",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsTemplateBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsTemplateBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsTemplateBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Добавить шаблон",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalSettingsTemplateCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalSettingsTemplateCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalSettingsTemplateCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalSettingsTemplateCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsTemplateItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsTemplateItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsTemplateItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{id}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Добавить шаблон по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsTemplateItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsTemplateItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsTemplateItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "Удалить шаблон",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/templates/{id}/default_state_switcher": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Задать, убрать шаблон по-умолчанию",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminalownerfiles": {
      "get": {
        "tags": [
          "TerminalOwnerFiles"
        ],
        "summary": "Получить пользовательский файлы для терминала",
        "parameters": [
          {
            "name": "OwnerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FileId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TerminalType",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FwTypeID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TerminalOwnerFiles"
        ],
        "summary": "Добавить пользовательский файл для терминала",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalOwnerFileCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalOwnerFileCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalOwnerFileCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalOwnerFileCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminalownerfiles/{id}": {
      "get": {
        "tags": [
          "TerminalOwnerFiles"
        ],
        "summary": "Получить пользовательский файл для терминала",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TerminalOwnerFiles"
        ],
        "summary": "Изменить пользовательский файл для терминала",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalOwnerFileCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalOwnerFileCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalOwnerFileCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalOwnerFileCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TerminalOwnerFiles"
        ],
        "summary": "Удалить пользовательский файл для терминала",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminalownerfiletypes": {
      "get": {
        "tags": [
          "TerminalOwnerFileTypes"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileTypeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileTypeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerFileTypeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Получить список терминалов",
        "parameters": [
          {
            "name": "WithoutMachine",
            "in": "query",
            "description": "Без привязанного автомата",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WithoutTid",
            "in": "query",
            "description": "Без основного TID",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WithoutReserveTid",
            "in": "query",
            "description": "Без резервного TID",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PaidSimOnly",
            "in": "query",
            "description": "Только с платной сим-картой",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExternalServerId",
            "in": "query",
            "description": "ID внешнего сервера",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/csv": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Получить список терминалов в формате CSV",
        "parameters": [
          {
            "name": "WithoutMachine",
            "in": "query",
            "description": "Без привязанного автомата",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WithoutTid",
            "in": "query",
            "description": "Без основного TID",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WithoutReserveTid",
            "in": "query",
            "description": "Без резервного TID",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PaidSimOnly",
            "in": "query",
            "description": "Только с платной сим-картой",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExternalServerId",
            "in": "query",
            "description": "ID внешнего сервера",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/terminals/ids": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Получить терминалы по списку Id",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/{id}": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Получить терминал по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Terminals"
        ],
        "summary": "Редактировать терминал",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/{id}/file/{fileId}": {
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Загрузка файла на терминал",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbServerCommandItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbServerCommandItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbServerCommandItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/{id}/commands": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Получить список команд отправленных на терминал",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ShowQrCommands",
            "in": "query",
            "description": "Отображать команды QR",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CommandId",
            "in": "query",
            "description": "Фильтр по команде",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Отправить команду на терминал",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbCommandItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/commands": {
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Отправить команду на несколько терминалов",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandMultiTargetCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandMultiTargetCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandMultiTargetCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandMultiTargetCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CommandMultiTargetResultItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandMultiTargetResultItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandMultiTargetResultItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/attach": {
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Привязать терминал по мак адресу",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalAttachModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalAttachModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalAttachModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalAttachModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/owner_change_report": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Информация о движении терминалов",
        "parameters": [
          {
            "name": "TerminalIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "FromOwnerID",
            "in": "query",
            "description": "Фильтр по источнику передачи",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToOwnerID",
            "in": "query",
            "description": "Фильтр по цели передачи",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SimNumber",
            "in": "query",
            "description": "Номер сим-карты",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ICCID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IMEI",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerChangeBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerChangeBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalOwnerChangeBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/id_by_mac": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Получение идентификатора терминала по МАК",
        "parameters": [
          {
            "name": "mac",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32ItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32ItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32ItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/map": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Получить список терминалов для карты",
        "parameters": [
          {
            "name": "Color",
            "in": "query",
            "description": "Цвет: gold, green, red, blue, grey",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TerminalId",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalShortBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalShortBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalShortBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/{id}/settings": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Получить настройки терминала",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalSettingsItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/replacetids": {
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Смета TID терминалов по реестру",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/replacetids/file": {
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Смета TID терминалов по реестру (из файлов)",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "formFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "formFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/attachtids": {
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Привязка TID к терминалам по реестру",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/attachtids/file": {
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Привязка TID к терминалам по реестру (из файла)",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "formFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "formFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/swaptids": {
      "put": {
        "tags": [
          "Terminals"
        ],
        "summary": "Смена TID терминалов на резервные",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalsSwapTidsModelItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalsSwapTidsModelItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalsSwapTidsModelItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminals/resetevadtsreport": {
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Обнулить отчет EvaDTS",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminalsext": {
      "get": {
        "tags": [
          "TerminalsExt"
        ],
        "summary": "Получить список дополнительных записей для терминалов",
        "parameters": [
          {
            "name": "MachineTypeId",
            "in": "query",
            "description": "Id типа подключения автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MachineManufacturerId",
            "in": "query",
            "description": "Id производителя автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MachineModelId",
            "in": "query",
            "description": "Id модели автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MachineFirmwareId",
            "in": "query",
            "description": "Id прошивки модели автомата",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminalsext/{id}": {
      "get": {
        "tags": [
          "TerminalsExt"
        ],
        "summary": "Получить дополнительную запись по id терминала",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TerminalsExt"
        ],
        "summary": "Добавить или заменить дополнительную запись для терминала",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalExtCreateUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalExtCreateUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalExtCreateUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalExtCreateUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminalsext/ids": {
      "get": {
        "tags": [
          "TerminalsExt"
        ],
        "summary": "Получить доп. записи по списку Id",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminalsext/lastscanned/{ownerId}": {
      "get": {
        "tags": [
          "TerminalsExt"
        ],
        "summary": "Получить доп. запись последнего сканированного терминала",
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/terminalsext/{id}/simnumber_manual": {
      "put": {
        "tags": [
          "TerminalsExt"
        ],
        "summary": "Задать номер сим-карты вручную",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "simNumber",
            "in": "query",
            "description": "Номер сим-карты",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTerminalExtItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/ticketmovelog": {
      "get": {
        "tags": [
          "TicketMoveLog"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "TicketId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MoveReason",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TicketMoveReason"
            }
          },
          {
            "name": "ToOperator",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromOperator",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MovedUserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TicketType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TicketType"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketMoveBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketMoveBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketMoveBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/ticketmovereasons": {
      "get": {
        "tags": [
          "TicketMoveReasons"
        ],
        "summary": "Получить список",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketMoveReasonBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketMoveReasonBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketMoveReasonBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/tickets": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Получить список доступных заявок",
        "parameters": [
          {
            "name": "TicketType",
            "in": "query",
            "description": "Тип заявки",
            "schema": {
              "$ref": "#/components/schemas/TicketType"
            }
          },
          {
            "name": "WithoutAnswerOnly",
            "in": "query",
            "description": "Показывать только заявки без ответа",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "State",
            "in": "query",
            "description": "Статус заявки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Operator",
            "in": "query",
            "description": "Оператор (Users.Id)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ActiveOnly",
            "in": "query",
            "description": "Только активные заявки",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ClosedOnly",
            "in": "query",
            "description": "Только закрытые заявки",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TerminalID",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BankID",
            "in": "query",
            "description": "Id банка",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Score",
            "in": "query",
            "description": "Оценка заявки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Добавить заявку",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/csv": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Заявки в формате csv",
        "parameters": [
          {
            "name": "TicketType",
            "in": "query",
            "description": "Тип заявки",
            "schema": {
              "$ref": "#/components/schemas/TicketType"
            }
          },
          {
            "name": "WithoutAnswerOnly",
            "in": "query",
            "description": "Показывать только заявки без ответа",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "State",
            "in": "query",
            "description": "Статус заявки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Operator",
            "in": "query",
            "description": "Оператор (Users.Id)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "ActiveOnly",
            "in": "query",
            "description": "Только активные заявки",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ClosedOnly",
            "in": "query",
            "description": "Только закрытые заявки",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TerminalID",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "BankID",
            "in": "query",
            "description": "Id банка",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Score",
            "in": "query",
            "description": "Оценка заявки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tickets/{id}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Получить заявку по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Редактировать заявку",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tickets"
        ],
        "summary": "Удалить заявку",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}/move": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Передать заявку другому оператору",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketMoveCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketMoveCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketMoveCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketMoveCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}/score": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Отзыв клиента",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketScore"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketScore"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketScore"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketScore"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}/resolved": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Вопрос решен",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}/comments": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Получить список комментариев к заявке",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketCommentBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketCommentBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketCommentBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Добавить комментарий к заявке",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketCommentCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketCommentCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketCommentCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketCommentCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketCommentItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketCommentItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketCommentItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}/attachments": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Добавить вложение к заявке",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketFileCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketFileCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketFileCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketFileCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketFileItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketFileItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketFileItemResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Получить список файлов прикрепленных к заявке",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketFileBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketFileBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketFileBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tickets"
        ],
        "summary": "Удалить все вложения в заявке",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Получить файл прикрепленный к заявке",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketFileItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketFileItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketFileItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/ticketsoperators": {
      "get": {
        "tags": [
          "TicketsOperators"
        ],
        "summary": "Получить всех операторов заявок",
        "parameters": [
          {
            "name": "Types",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TicketType"
              }
            }
          },
          {
            "name": "State",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShowDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TicketsOperators"
        ],
        "summary": "Добавить операторов заявок",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketsOperatorCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketsOperatorCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketsOperatorCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketsOperatorCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/ticketsoperators/{id}": {
      "get": {
        "tags": [
          "TicketsOperators"
        ],
        "summary": "Получить операторов заявок по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TicketsOperators"
        ],
        "summary": "Редактировать операторов заявок по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketsOperatorUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketsOperatorUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketsOperatorUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TicketsOperatorUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTicketsOperatorItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TicketsOperators"
        ],
        "summary": "Удалить операторов заявок по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/tid": {
      "get": {
        "tags": [
          "Tid"
        ],
        "summary": "Получить список доступных TID",
        "parameters": [
          {
            "name": "NotUsedAsPrimary",
            "in": "query",
            "description": "Не используется как основной",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "NotUsedAsReserve",
            "in": "query",
            "description": "Не используется как резервный",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tid"
        ],
        "summary": "Добавить TID",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TidCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TidCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TidCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TidCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/tid/{id}": {
      "get": {
        "tags": [
          "Tid"
        ],
        "summary": "Получить TID по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tid"
        ],
        "summary": "Изменить TID по id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TidUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TidUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TidUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TidUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/tid/terminalid/{tid}": {
      "get": {
        "tags": [
          "Tid"
        ],
        "summary": "Получить TID по TerminalId",
        "parameters": [
          {
            "name": "tid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "processing",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PaymentProvider"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/tid/{id}/state": {
      "put": {
        "tags": [
          "Tid"
        ],
        "summary": "Включить/Отключить TID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/tid/banks/active": {
      "get": {
        "tags": [
          "Tid"
        ],
        "summary": "Получить список активных id банков",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32BaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32BaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32BaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/tid/processings/active": {
      "get": {
        "tags": [
          "Tid"
        ],
        "summary": "Получить список id активных процессингов",
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32BaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32BaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UInt32BaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/tid/ids": {
      "get": {
        "tags": [
          "Tid"
        ],
        "summary": "Получить TIDы по списку Id",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTidBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/token": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Токен авторизации",
        "parameters": [
          {
            "name": "Login",
            "in": "query",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "x-client-ip",
            "in": "header",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenOrSendCodeResult"
                }
              }
            }
          }
        }
      }
    },
    "/token/verify": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Подтверждение авторизации (если включена двухфакторная аутентификация)",
        "parameters": [
          {
            "name": "Code",
            "in": "query",
            "description": "Код подтверждения",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResult"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Получить транзакции терминала за период",
        "parameters": [
          {
            "name": "DivisionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProcessingIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "TermId",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTransactionBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/csv": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Получить транзакции терминала за период в формате CSV (сортировка отключена)",
        "parameters": [
          {
            "name": "DivisionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProcessingIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "TermId",
            "in": "query",
            "description": "Идентификатор терминала",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Дата начала интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Дата конца интервала",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IntervalByColumn",
            "in": "query",
            "description": "Интервал по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Получить транзакции по ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTransactionItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}/returns": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Получить транзакции возвратов по ID исходной транзакции",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbTransactionBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}/cancel": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Отмена транзакции по номеру",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/usernotificationsettings": {
      "get": {
        "tags": [
          "UserNotificationSettings"
        ],
        "summary": "Получить список всех настроек уведомлений пользователей",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsBaseQueryResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsBaseQueryResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserNotificationSettings"
        ],
        "summary": "Создать настройки уведомлений пользователя",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationSettingsCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationSettingsCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationSettingsCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationSettingsCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/usernotificationsettings/{userId}": {
      "get": {
        "tags": [
          "UserNotificationSettings"
        ],
        "summary": "Получить настройки уведомлений пользователя по id",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsItemResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserNotificationSettings"
        ],
        "summary": "Редактировать настройки уведомлений пользователя",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationSettingsUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationSettingsUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationSettingsUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationSettingsUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsItemResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsItemResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserNotificationSettingsItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserNotificationSettings"
        ],
        "summary": "Удалить настройки уведомлений пользователя",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Получить список всех пользователей",
        "parameters": [
          {
            "name": "ShowExpired",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserBaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Добавить пользователя",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/operators": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Получить список операторов",
        "parameters": [
          {
            "name": "ShowExpired",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DivisionId",
            "in": "query",
            "description": "Идентификатор подразделения",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OwnerId",
            "in": "query",
            "description": "Идентификатор клиента",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы начиная с первой",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemsOnPage",
            "in": "query",
            "description": "Количество записей на одной странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "description": "Текстовый фильтр (если FilterByColumn не указан, то по всей таблице)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilterType",
            "in": "query",
            "description": "Тип фильтра (0 - поиск внутри строки, 1 - точный поиск) (работает только с FilterByColumn)",
            "schema": {
              "$ref": "#/components/schemas/FilterTextType"
            }
          },
          {
            "name": "FilterByColumn",
            "in": "query",
            "description": "Фильтрация по номеру колонки",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderByColumn",
            "in": "query",
            "description": "Сортировка по номеру колонки",
            "schema": {
              "maximum": 2147483647,
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderDesc",
            "in": "query",
            "description": "Направление сортировки: false-по возрастанию, true-по убыванию",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserBaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Получить информацию об одном пользователе",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUser"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Изменить данные одного пользователя",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserItemResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Удалить пользователя",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/users/password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Сменить пароль",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePassword"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePassword"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePassword"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Текущий пользователь",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbUserItemResult"
                }
              }
            }
          }
        }
      }
    },
    "/users/agreement": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Получить информацию о согласии с офертой",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Изменить информацию о согласии с офертой",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Токен авторизации",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserAgreementModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BankAccountInfo": {
        "type": "object",
        "properties": {
          "account": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "rcbic": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bank_name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bank_address": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "corr_account": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BankInfo": {
        "type": "object",
        "properties": {
          "rcbic": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bank_name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bank_address": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "corr_account": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BankInfoItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/BankInfo"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BonusAccountCreateModel": {
        "required": [
          "card_number"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "bonus_percent": {
            "maximum": 9999.99,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "card_number": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BonusAccountUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "bonus_percent": {
            "maximum": 9999.99,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BonusBalanceChangeModel": {
        "type": "object",
        "properties": {
          "value": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CarWashType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ChangeOwnerPartnerModel": {
        "required": [
          "partner_id"
        ],
        "type": "object",
        "properties": {
          "partner_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CommandCreateModel": {
        "type": "object",
        "properties": {
          "command_id": {
            "$ref": "#/components/schemas/TerminalCommand"
          },
          "parameter1": {
            "type": "integer",
            "format": "int32"
          },
          "parameter2": {
            "type": "integer",
            "format": "int32"
          },
          "parameter3": {
            "type": "integer",
            "format": "int32"
          },
          "parameter4": {
            "type": "integer",
            "format": "int32"
          },
          "parameter5": {
            "type": "integer",
            "format": "int32"
          },
          "parameter6": {
            "type": "integer",
            "format": "int32"
          },
          "parameter7": {
            "type": "integer",
            "format": "int32"
          },
          "parameter8": {
            "type": "integer",
            "format": "int32"
          },
          "str_parameter1": {
            "type": "string",
            "nullable": true
          },
          "str_parameter2": {
            "type": "string",
            "nullable": true
          },
          "json_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandParameterValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandMultiTargetCreateModel": {
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "command_id": {
            "$ref": "#/components/schemas/TerminalCommand"
          },
          "parameter1": {
            "type": "integer",
            "format": "int32"
          },
          "parameter2": {
            "type": "integer",
            "format": "int32"
          },
          "parameter3": {
            "type": "integer",
            "format": "int32"
          },
          "parameter4": {
            "type": "integer",
            "format": "int32"
          },
          "parameter5": {
            "type": "integer",
            "format": "int32"
          },
          "parameter6": {
            "type": "integer",
            "format": "int32"
          },
          "parameter7": {
            "type": "integer",
            "format": "int32"
          },
          "parameter8": {
            "type": "integer",
            "format": "int32"
          },
          "str_parameter1": {
            "type": "string",
            "nullable": true
          },
          "str_parameter2": {
            "type": "string",
            "nullable": true
          },
          "json_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandParameterValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandMultiTargetResult": {
        "required": [
          "failed_ids_with_errors",
          "ids"
        ],
        "type": "object",
        "properties": {
          "failed_ids_with_errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandMultiTargetResultItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CommandMultiTargetResult"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "group_name": {
            "type": "string",
            "nullable": true
          },
          "default_value": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "value_options": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "can_be_null": {
            "type": "boolean"
          },
          "range_min": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "range_max": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "length_min": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "length_max": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandParameterValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommonReportResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/CommonReportTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonReportRow"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommonReportRow": {
        "type": "object",
        "properties": {
          "terminal_id": {
            "type": "integer",
            "format": "int32"
          },
          "tid": {
            "type": "string",
            "nullable": true
          },
          "division_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "terminal_comment": {
            "type": "string",
            "nullable": true
          },
          "incoming_amount": {
            "type": "integer",
            "format": "int32"
          },
          "incoming_count": {
            "type": "integer",
            "format": "int32"
          },
          "cancelled_amount": {
            "type": "integer",
            "format": "int32"
          },
          "cancelled_count": {
            "type": "integer",
            "format": "int32"
          },
          "rejected_amount": {
            "type": "integer",
            "format": "int32"
          },
          "rejected_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CommonReportTotal": {
        "type": "object",
        "properties": {
          "incoming_amount": {
            "type": "integer",
            "format": "int32"
          },
          "incoming_count": {
            "type": "integer",
            "format": "int32"
          },
          "cancelled_amount": {
            "type": "integer",
            "format": "int32"
          },
          "cancelled_count": {
            "type": "integer",
            "format": "int32"
          },
          "rejected_amount": {
            "type": "integer",
            "format": "int32"
          },
          "rejected_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContactInfo": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 3,
            "type": "string"
          },
          "contact_phone": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contact_email": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContactInfoBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactInfo"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CostType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "DbAzsProvider": {
        "required": [
          "azs_number",
          "fuelling_point_id",
          "osnovan_id",
          "server_url",
          "terminal_id"
        ],
        "type": "object",
        "properties": {
          "terminal_id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "server_url": {
            "maxLength": 45,
            "minLength": 1,
            "type": "string"
          },
          "osnovan_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "fuelling_point_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "azs_number": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbAzsProviderBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbAzsProvider"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbAzsProviderItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbAzsProvider"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbBank": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "string",
            "nullable": true
          },
          "bik": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbBankBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbBank"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbBonusAccount": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "bonus_percent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "card_number": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "last_change_time": {
            "type": "string",
            "format": "date-time"
          },
          "owner_bonus_percent": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbBonusAccountBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbBonusAccount"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbBonusAccountItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbBonusAccount"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbBonusTransaction": {
        "type": "object",
        "properties": {
          "bonus_id": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "integer",
            "format": "int32"
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "transaction_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transaction_sum": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbBonusTransactionBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbBonusTransaction"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbBreakReason": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbBreakReasonBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbBreakReason"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbBreakSymptom": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbBreakSymptomBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbBreakSymptom"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbBusinessType": {
        "type": "object",
        "properties": {
          "mcc": {
            "type": "integer",
            "format": "int32"
          },
          "commission_rate": {
            "type": "number",
            "format": "float"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbBusinessTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbBusinessType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbCatalogItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbCatalogItemBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbCatalogItem"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbCommand": {
        "type": "object",
        "properties": {
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "user_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "command_id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "parameter1": {
            "type": "integer",
            "format": "int32"
          },
          "parameter2": {
            "type": "integer",
            "format": "int32"
          },
          "parameter3": {
            "type": "integer",
            "format": "int32"
          },
          "parameter4": {
            "type": "integer",
            "format": "int32"
          },
          "parameter5": {
            "type": "integer",
            "format": "int32"
          },
          "parameter6": {
            "type": "integer",
            "format": "int32"
          },
          "parameter7": {
            "type": "integer",
            "format": "int32"
          },
          "parameter8": {
            "type": "integer",
            "format": "int32"
          },
          "str_parameter1": {
            "type": "string",
            "nullable": true
          },
          "str_parameter2": {
            "type": "string",
            "nullable": true
          },
          "json_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandParameter"
            },
            "nullable": true
          },
          "state": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "state_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "time_created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "time_delivered": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbCommandBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbCommand"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbCommandItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbCommand"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbCommandStateType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbCommandStateTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbCommandStateType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbCommandType": {
        "type": "object",
        "properties": {
          "parameter_name1": {
            "type": "string",
            "nullable": true
          },
          "parameter_name2": {
            "type": "string",
            "nullable": true
          },
          "parameter_name3": {
            "type": "string",
            "nullable": true
          },
          "parameter_name4": {
            "type": "string",
            "nullable": true
          },
          "parameter_name5": {
            "type": "string",
            "nullable": true
          },
          "parameter_name6": {
            "type": "string",
            "nullable": true
          },
          "parameter_name7": {
            "type": "string",
            "nullable": true
          },
          "parameter_name8": {
            "type": "string",
            "nullable": true
          },
          "str_parameter_name1": {
            "type": "string",
            "nullable": true
          },
          "str_parameter_name2": {
            "type": "string",
            "nullable": true
          },
          "parameter_default_value1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameter_default_value2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameter_default_value3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameter_default_value4": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameter_default_value5": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameter_default_value6": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameter_default_value7": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parameter_default_value8": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "str_parameter_default_value1": {
            "type": "string",
            "nullable": true
          },
          "str_parameter_default_value2": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "json_params": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbCommandTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbCommandType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbCountry": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "alpha2": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbCountryBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbCountry"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbCurrency": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "default_server": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbCurrencyBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbCurrency"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbDiscountsQr": {
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "discount_type": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "qr_code": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "count_left": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "time_used": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbDiscountsQrBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbDiscountsQr"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbDiscountsQrItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbDiscountsQr"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbDivision": {
        "required": [
          "name",
          "owner_id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbDivisionBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbDivision"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbDivisionItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbDivision"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbEncashItem": {
        "type": "object",
        "properties": {
          "machine_id": {
            "type": "integer",
            "format": "int32"
          },
          "machine_name": {
            "type": "string",
            "nullable": true
          },
          "machine_address": {
            "type": "string",
            "nullable": true
          },
          "machine_model": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "tube_sum": {
            "type": "integer",
            "format": "int32"
          },
          "encash_coins": {
            "type": "integer",
            "format": "int32"
          },
          "encash_banknotes": {
            "type": "integer",
            "format": "int32"
          },
          "encash": {
            "type": "integer",
            "format": "int32"
          },
          "cash_sales": {
            "type": "integer",
            "format": "int32"
          },
          "diff": {
            "type": "integer",
            "format": "int32"
          },
          "division_name": {
            "type": "string",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbEncashItemEncashTotalTotalQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/EncashTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbEncashItem"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbEvent": {
        "type": "object",
        "properties": {
          "machine_id": {
            "type": "integer",
            "format": "int32"
          },
          "machine_name": {
            "type": "string",
            "nullable": true
          },
          "machine_address": {
            "type": "string",
            "nullable": true
          },
          "machine_model": {
            "type": "string",
            "nullable": true
          },
          "event_name": {
            "type": "string",
            "nullable": true
          },
          "product_name": {
            "type": "string",
            "nullable": true
          },
          "sum": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "dateID": {
            "type": "number",
            "format": "double"
          },
          "division_name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbEventEventTotalTotalQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/EventTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbEvent"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbEventType": {
        "type": "object",
        "properties": {
          "machine_state_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbEventTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbEventType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbExternalServer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbExternalServerBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbExternalServer"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbFlasherInterval": {
        "type": "object",
        "properties": {
          "start_id": {
            "type": "integer",
            "format": "int32"
          },
          "end_id": {
            "type": "integer",
            "format": "int32"
          },
          "free_count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbFlasherIntervalBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbFlasherInterval"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbFlasherIntervalItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbFlasherInterval"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbFwType": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbFwTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbFwType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbIngredient": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "measure": {
            "type": "integer",
            "format": "int32"
          },
          "item_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbIngredientBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbIngredient"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbIngredientItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbIngredient"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbKassa": {
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "kassa_id": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kassa_token": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "orange_pfx": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "orange_rsa": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "orange_rsa_name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nds_type": {
            "type": "integer",
            "format": "int32"
          },
          "tax_regime": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "provider_id": {
            "type": "integer",
            "format": "int32"
          },
          "provider_name": {
            "type": "string",
            "nullable": true
          },
          "display_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "display_fns_qr": {
            "type": "boolean"
          },
          "ffd_version": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "integer",
            "format": "int32"
          },
          "place": {
            "type": "integer",
            "format": "int32"
          },
          "enable_full_item_name": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbKassaBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbKassa"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbKassaItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbKassa"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbKassaProvider": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbKassaProviderBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbKassaProvider"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbKnowledgeBaseArticle": {
        "required": [
          "category_id",
          "content",
          "title"
        ],
        "type": "object",
        "properties": {
          "category_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "category_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "minLength": 3,
            "type": "string"
          },
          "content": {
            "minLength": 3,
            "type": "string"
          },
          "tags": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbKnowledgeBaseArticleBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbKnowledgeBaseArticleItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbKnowledgeBaseArticle"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbKnowledgeBaseCategory": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 3,
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbKnowledgeBaseCategoryBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbKnowledgeBaseCategoryItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbKnowledgeBaseCategory"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachine": {
        "required": [
          "address",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "model": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "model_id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "number": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "state_id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "product_matrix_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "next_product_matrix_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "daily_sales_sum": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "daily_sales_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "last_sale": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "division_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state_mask": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "micromarket": {
            "type": "boolean"
          },
          "product_matrix_version": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineIngredient": {
        "type": "object",
        "properties": {
          "ingredient_id": {
            "type": "integer",
            "format": "int32"
          },
          "machine_id": {
            "type": "integer",
            "format": "int32"
          },
          "loading": {
            "type": "integer",
            "format": "int32"
          },
          "critical": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "last_load_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ingredient_name": {
            "type": "string",
            "nullable": true
          },
          "measure": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DbMachineIngredientBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMachineIngredient"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbMachine"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineMachineTotalTotalQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/MachineTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMachine"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMachineModel"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelFirmware": {
        "required": [
          "model_id",
          "version"
        ],
        "type": "object",
        "properties": {
          "model_id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "minLength": 1,
            "type": "string"
          },
          "path": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelFirmwareBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMachineModelFirmware"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelFirmwareItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbMachineModelFirmware"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbMachineModel"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelManufacturer": {
        "required": [
          "name",
          "type_id"
        ],
        "type": "object",
        "properties": {
          "type_id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "path": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelManufacturerBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMachineModelManufacturer"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelManufacturerItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbMachineModelManufacturer"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelModel": {
        "required": [
          "manufacturer_id",
          "name"
        ],
        "type": "object",
        "properties": {
          "manufacturer_id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "path": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "manual_url": {
            "type": "string",
            "nullable": true
          },
          "template_settings_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelModelBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMachineModelModel"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelModelItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbMachineModelModel"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMachineModelType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineModelTypeItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbMachineModelType"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineState": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineStateBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMachineState"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineStateType": {
        "type": "object",
        "properties": {
          "set_event_id": {
            "type": "integer",
            "format": "int32"
          },
          "reset_event_id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbMachineStateTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMachineStateType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMid": {
        "required": [
          "owner_id"
        ],
        "type": "object",
        "properties": {
          "mid": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mcc": {
            "type": "integer",
            "format": "int32"
          },
          "currency_id": {
            "type": "integer",
            "format": "int32"
          },
          "country_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bank_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "owner_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "zip_code": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "area": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "settlement": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "merchant_name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sponsored_mid": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "processing_id": {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbMidBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbMid"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbMidItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbMid"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbNfcTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "action_id": {
            "type": "integer",
            "format": "int32"
          },
          "tid": {
            "type": "string",
            "nullable": true
          },
          "parameter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbNfcTagBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbNfcTag"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbNfcTagItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbNfcTag"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbProcessingType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbProcessingTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbProcessingType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbProduct": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "full_name": {
            "type": "string",
            "nullable": true
          },
          "recipe_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "barcode": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "gtin": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "is_ingredient": {
            "type": "boolean"
          },
          "nds_type": {
            "type": "integer",
            "format": "int32"
          },
          "subject_type": {
            "type": "integer",
            "format": "int32"
          },
          "cost_type": {
            "$ref": "#/components/schemas/CostType"
          },
          "supplier_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbProductBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbProduct"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbProductItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbProduct"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbProductMatrix": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "micromarket": {
            "type": "boolean"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbProductMatrixItems"
            },
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "offset": {
            "maximum": 255,
            "minimum": -255,
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbProductMatrixBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbProductMatrix"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbProductMatrixItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbProductMatrix"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbProductMatrixItems": {
        "type": "object",
        "properties": {
          "item_id": {
            "type": "integer",
            "format": "int32"
          },
          "product_id": {
            "type": "integer",
            "format": "int32"
          },
          "product_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "writeOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbQrProvider": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbQrProviderBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbQrProvider"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbQrSettings": {
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "provider_id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "client_id": {
            "type": "string",
            "nullable": true
          },
          "secret_key": {
            "type": "string",
            "nullable": true
          },
          "member_id": {
            "type": "string",
            "nullable": true
          },
          "certificate": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "provider_name": {
            "type": "string",
            "nullable": true
          },
          "private_key": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "additional_parameter": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbQrSettingsBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbQrSettings"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbQrSettingsItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbQrSettings"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbQuickAnswer": {
        "required": [
          "problem",
          "solution"
        ],
        "type": "object",
        "properties": {
          "machine_model": {
            "type": "string",
            "nullable": true
          },
          "problem": {
            "minLength": 1,
            "type": "string"
          },
          "solution": {
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbQuickAnswerBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbQuickAnswer"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbQuickAnswerItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbQuickAnswer"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbRecipe": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbRecipeItem"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbRecipeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbRecipe"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbRecipeItem": {
        "type": "object",
        "properties": {
          "ingredient_id": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "ingredient_name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbRecipeItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbRecipe"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbRepairLocation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbRepairLocationBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbRepairLocation"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbReplenishment": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "machine_id": {
            "type": "integer",
            "format": "int32"
          },
          "machine_name": {
            "type": "string",
            "nullable": true
          },
          "machine_address": {
            "type": "string",
            "nullable": true
          },
          "machine_model": {
            "type": "string",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "division_name": {
            "type": "string",
            "nullable": true
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbReplenishmentItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbReplenishmentBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbReplenishment"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbReplenishmentItem": {
        "type": "object",
        "properties": {
          "ingredient_id": {
            "type": "integer",
            "format": "int32"
          },
          "ingredient_name": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "measure": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DbSale": {
        "type": "object",
        "properties": {
          "machine_id": {
            "type": "integer",
            "format": "int32"
          },
          "machine_name": {
            "type": "string",
            "nullable": true
          },
          "machine_address": {
            "type": "string",
            "nullable": true
          },
          "machine_model": {
            "type": "string",
            "nullable": true
          },
          "sell_type": {
            "type": "integer",
            "format": "int32"
          },
          "item_id": {
            "type": "string",
            "nullable": true
          },
          "item_name": {
            "type": "string",
            "nullable": true
          },
          "item_price": {
            "type": "integer",
            "format": "int32"
          },
          "barcode": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "division_name": {
            "type": "string",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbSaleBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSale"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSaleByMachine": {
        "type": "object",
        "properties": {
          "machine_id": {
            "type": "integer",
            "format": "int32"
          },
          "machine_name": {
            "type": "string",
            "nullable": true
          },
          "machine_address": {
            "type": "string",
            "nullable": true
          },
          "machine_model": {
            "type": "string",
            "nullable": true
          },
          "sum": {
            "type": "integer",
            "format": "int64"
          },
          "cash_count": {
            "type": "integer",
            "format": "int32"
          },
          "cash_sum": {
            "type": "integer",
            "format": "int64"
          },
          "cashless_count": {
            "type": "integer",
            "format": "int32"
          },
          "cashless_sum": {
            "type": "integer",
            "format": "int64"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          },
          "division_name": {
            "type": "string",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSaleByMachineDbSaleByMachineTotalTotalQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/DbSaleByMachineTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSaleByMachine"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSaleByMachineTotal": {
        "type": "object",
        "properties": {
          "sum": {
            "type": "integer",
            "format": "int64"
          },
          "cash_count": {
            "type": "integer",
            "format": "int64"
          },
          "cash_sum": {
            "type": "integer",
            "format": "int64"
          },
          "cashless_count": {
            "type": "integer",
            "format": "int64"
          },
          "cashless_sum": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DbSaleGraph": {
        "type": "object",
        "properties": {
          "day": {
            "type": "integer",
            "format": "int64"
          },
          "sum": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DbSaleGraphBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSaleGraph"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSaleProduct": {
        "type": "object",
        "properties": {
          "product_name": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "sum": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          },
          "last_sale": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DbSaleProductDbSaleProductTotalTotalQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/DbSaleProductTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSaleProduct"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSaleProductTotal": {
        "type": "object",
        "properties": {
          "sum": {
            "type": "integer",
            "format": "int64"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DbSellType": {
        "type": "object",
        "properties": {
          "event_name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbSellTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSellType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbServerCommand": {
        "type": "object",
        "properties": {
          "command_id": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "integer",
            "format": "int32"
          },
          "parameter1": {
            "type": "integer",
            "format": "int32"
          },
          "str_parameter1": {
            "type": "string",
            "nullable": true
          },
          "json_parameter": {
            "type": "string",
            "nullable": true
          },
          "time_created": {
            "type": "string",
            "format": "date-time"
          },
          "time_processed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbServerCommandItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbServerCommand"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscription": {
        "required": [
          "owner_id"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "debit": {
            "type": "integer",
            "format": "int32"
          },
          "credit": {
            "type": "integer",
            "format": "int32"
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionExt": {
        "type": "object",
        "properties": {
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32"
          },
          "sim_number": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sim_text": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "sum": {
            "type": "integer",
            "format": "int32"
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionExtBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSubscriptionExt"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionFeeDisableReason": {
        "type": "object",
        "properties": {
          "visible": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionFeeDisableReasonBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSubscriptionFeeDisableReason"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbSubscription"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionState": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "exist": {
            "type": "boolean"
          },
          "days_left": {
            "type": "integer",
            "format": "int32"
          },
          "date_end": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionStateItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbSubscriptionState"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionSubscriptionTotalTotalQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/SubscriptionTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSubscription"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbSubscriptionTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSubscriptionType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSupplier": {
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "agent_type": {
            "$ref": "#/components/schemas/SupplierAgentType"
          },
          "supplier_inn": {
            "type": "string",
            "nullable": true
          },
          "supplier_name": {
            "type": "string",
            "nullable": true
          },
          "supplier_phone": {
            "type": "string",
            "nullable": true
          },
          "pay_transfer_operator_phone": {
            "type": "string",
            "nullable": true
          },
          "pay_agent_operation": {
            "type": "string",
            "nullable": true
          },
          "pay_agent_phone": {
            "type": "string",
            "nullable": true
          },
          "pay_operator_phone": {
            "type": "string",
            "nullable": true
          },
          "pay_operator_name": {
            "type": "string",
            "nullable": true
          },
          "pay_operator_address": {
            "type": "string",
            "nullable": true
          },
          "pay_operator_inn": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbSupplierBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbSupplier"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbSupplierItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbSupplier"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminal": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tid": {
            "type": "string",
            "nullable": true
          },
          "mid": {
            "type": "string",
            "nullable": true
          },
          "processing_id": {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "reserve_tid_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serial_number": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "fw_type": {
            "type": "integer",
            "format": "int32"
          },
          "gsm_operator": {
            "type": "string",
            "nullable": true
          },
          "gsm_rssi": {
            "type": "integer",
            "format": "int32"
          },
          "imei": {
            "type": "integer",
            "format": "int64"
          },
          "partner_id": {
            "type": "integer",
            "format": "int32"
          },
          "partner_name": {
            "type": "string",
            "nullable": true
          },
          "main_owner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "external_server_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "last_online_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "last24_hours_online": {
            "type": "integer",
            "format": "int32"
          },
          "last_hour_online": {
            "type": "integer",
            "format": "int32"
          },
          "sber_qrid": {
            "type": "string",
            "nullable": true
          },
          "auto_cancel_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "bonus_percent": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "bonus_transactions": {
            "type": "boolean",
            "nullable": true
          },
          "qr_discount_percent": {
            "type": "number",
            "format": "float"
          },
          "send_cash": {
            "type": "boolean"
          },
          "send_cashless": {
            "type": "boolean"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "sim_balance": {
            "type": "integer",
            "format": "int32"
          },
          "sim_number": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "sim_text": {
            "type": "string",
            "nullable": true
          },
          "paid_sim": {
            "type": "boolean"
          },
          "division_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "division_name": {
            "type": "string",
            "nullable": true
          },
          "bootloader_version": {
            "type": "integer",
            "format": "int32"
          },
          "success_message": {
            "type": "string",
            "nullable": true
          },
          "success_message_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "machine_id": {
            "type": "integer",
            "format": "int32"
          },
          "ping": {
            "type": "integer",
            "format": "int32"
          },
          "disable_firmware_updates": {
            "type": "boolean"
          },
          "kassa_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "generate_eva_dts_report": {
            "type": "boolean"
          },
          "min_pay_server": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "sum": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "$ref": "#/components/schemas/TerminalState"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTerminal"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalExt": {
        "type": "object",
        "properties": {
          "terminal_id": {
            "type": "integer",
            "format": "int32"
          },
          "sim_number": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "machine_name": {
            "type": "string",
            "nullable": true
          },
          "machine_type_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_type_name": {
            "type": "string",
            "nullable": true
          },
          "machine_manufacturer_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_manufacturer_name": {
            "type": "string",
            "nullable": true
          },
          "machine_model_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_model_name": {
            "type": "string",
            "nullable": true
          },
          "machine_firmware_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_firmware_version": {
            "type": "string",
            "nullable": true
          },
          "ble_uuid": {
            "type": "string",
            "nullable": true
          },
          "car_wash_type": {
            "$ref": "#/components/schemas/CarWashType"
          },
          "iccid": {
            "type": "string",
            "nullable": true
          },
          "last_reg_qr_scan_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "last_reg_qr_scan_owner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalExtBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTerminalExt"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalExtItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTerminalExt"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTerminal"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalOwnerChange": {
        "type": "object",
        "properties": {
          "terminal_id": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "from_owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "from_owner_name": {
            "type": "string",
            "nullable": true
          },
          "to_owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "to_owner_name": {
            "type": "string",
            "nullable": true
          },
          "sim_text": {
            "type": "string",
            "nullable": true
          },
          "sim_number": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "paid_sim": {
            "type": "boolean"
          },
          "gsm_operator": {
            "type": "string",
            "nullable": true
          },
          "iccid": {
            "type": "string",
            "nullable": true
          },
          "imei": {
            "type": "integer",
            "format": "int64"
          },
          "moved_user_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "moved_user_name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalOwnerChangeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTerminalOwnerChange"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalOwnerFile": {
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "file_id": {
            "$ref": "#/components/schemas/TerminalOwnerFileType"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "time_changed": {
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "terminal_type": {
            "type": "integer",
            "format": "int32"
          },
          "fw_type_id": {
            "type": "integer",
            "format": "int32"
          },
          "offset_x": {
            "type": "integer",
            "format": "int32"
          },
          "offset_y": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalOwnerFileBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTerminalOwnerFile"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalOwnerFileItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTerminalOwnerFile"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalOwnerFileType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalOwnerFileTypeBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTerminalOwnerFileType"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalSettings": {
        "type": "object",
        "properties": {
          "terminal_id": {
            "type": "integer",
            "format": "int32"
          },
          "settings": {
            "type": "string",
            "nullable": true
          },
          "lcd_rotation": {
            "type": "integer",
            "format": "int32"
          },
          "mdb_sniff": {
            "type": "boolean"
          },
          "sniff_mdb_send_all": {
            "type": "boolean"
          },
          "sniff_mdb_reader_only": {
            "type": "boolean"
          },
          "coin_setup": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "validator_setup": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "reader_settings_packet": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "reader_id_packet": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "max_price": {
            "type": "integer",
            "format": "int32"
          },
          "reader_start_session_credit": {
            "type": "integer",
            "format": "int32"
          },
          "mbd_force_cancel_session": {
            "type": "boolean"
          },
          "reader_address": {
            "type": "integer",
            "format": "int32"
          },
          "gsm_fast_connect": {
            "type": "boolean"
          },
          "str_preferred_operator": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "lcd_turn_off": {
            "type": "boolean"
          },
          "dbg_if": {
            "type": "boolean"
          },
          "send_mdb_sniff_packets": {
            "type": "boolean"
          },
          "wait_cash_session_end_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "lcd_show_cash_credit": {
            "type": "boolean"
          },
          "send_mdb_sniff_vend_reports": {
            "type": "boolean"
          },
          "block_mdb_tx": {
            "type": "boolean"
          },
          "main_mode": {
            "type": "integer",
            "format": "int32"
          },
          "cashless_credit_refund_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "start_screen_background_color": {
            "type": "integer",
            "format": "int32"
          },
          "start_screen_button_color": {
            "type": "integer",
            "format": "int32"
          },
          "start_screen_text_color": {
            "type": "integer",
            "format": "int32"
          },
          "pay_without_mdb": {
            "type": "boolean"
          },
          "lcd_item_selection_arrow_direction": {
            "type": "integer",
            "format": "int32"
          },
          "double_item_selection": {
            "type": "boolean"
          },
          "str_preferred_server": {
            "type": "string",
            "nullable": true
          },
          "slave_uart_speed": {
            "type": "integer",
            "format": "int32"
          },
          "gift_mode": {
            "type": "boolean"
          },
          "start_summ": {
            "type": "integer",
            "format": "int32"
          },
          "min_summ": {
            "type": "integer",
            "format": "int32"
          },
          "max_summ": {
            "type": "integer",
            "format": "int32"
          },
          "step_summ": {
            "type": "integer",
            "format": "int32"
          },
          "str_gift_tex": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "reboot_reason": {
            "type": "integer",
            "format": "int32"
          },
          "disable_battery": {
            "type": "boolean"
          },
          "mdb_price_koeff": {
            "type": "integer",
            "format": "int32"
          },
          "avoid_vmc_err": {
            "type": "integer",
            "format": "int32"
          },
          "reader_disabled_report_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "mdb_client_activity_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "card_present_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "use_wi_fi": {
            "type": "boolean"
          },
          "reboot_count": {
            "type": "integer",
            "format": "int32"
          },
          "mdb_reset_after_reset_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "current_seconds": {
            "type": "integer",
            "format": "int32"
          },
          "mdb_session_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "program_crc": {
            "type": "integer",
            "format": "int32"
          },
          "program_len": {
            "type": "integer",
            "format": "int32"
          },
          "program_version": {
            "type": "integer",
            "format": "int32"
          },
          "bootloader_crc": {
            "type": "integer",
            "format": "int32"
          },
          "bootloader_len": {
            "type": "integer",
            "format": "int32"
          },
          "temp_bridge_id": {
            "type": "integer",
            "format": "int32"
          },
          "reserved": {
            "type": "integer",
            "format": "int32"
          },
          "log_level": {
            "type": "integer",
            "format": "int32"
          },
          "ext_pin_start_value": {
            "type": "integer",
            "format": "int32"
          },
          "ext_pin_trigger": {
            "type": "integer",
            "format": "int32"
          },
          "ext_pin_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "restart_session_after_vend_failure": {
            "type": "integer",
            "format": "int32"
          },
          "ext_pin_trigger_photo_sensor": {
            "type": "integer",
            "format": "int32"
          },
          "vend_settings_protocol": {
            "type": "integer",
            "format": "int32"
          },
          "vend_settings_uart_speed": {
            "type": "integer",
            "format": "int32"
          },
          "pseudo_always_idle": {
            "type": "boolean"
          },
          "discount_percent": {
            "type": "integer",
            "format": "int32"
          },
          "discount_sum": {
            "type": "integer",
            "format": "int32"
          },
          "demo_mode": {
            "type": "boolean"
          },
          "disable_service_mode": {
            "type": "boolean"
          },
          "disable_touch_reboot": {
            "type": "boolean"
          },
          "prices": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "price_selection_method": {
            "type": "integer",
            "format": "int32"
          },
          "pulse_mode": {
            "type": "integer",
            "format": "int32"
          },
          "pulse_denomination": {
            "type": "integer",
            "format": "int32"
          },
          "preferred_server": {
            "type": "integer",
            "format": "int32"
          },
          "disconnected_period_flash": {
            "type": "integer",
            "format": "int32"
          },
          "connected_period_flash": {
            "type": "integer",
            "format": "int32"
          },
          "reader_qr": {
            "type": "boolean"
          },
          "mdb_gateway": {
            "type": "boolean"
          },
          "pulse_denomination_sniffer1": {
            "type": "integer",
            "format": "int32"
          },
          "pulse_denomination_sniffer2": {
            "type": "integer",
            "format": "int32"
          },
          "pulse_type_scheme": {
            "type": "integer",
            "format": "int32"
          },
          "currency_code": {
            "type": "integer",
            "format": "int32"
          },
          "pulse_sniffer_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "reboot_if_server_offline": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalSettingsItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTerminalSettings"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalSettingsTemplate": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "settings": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalSettingsTemplateBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTerminalSettingsTemplate"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalSettingsTemplateItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTerminalSettingsTemplate"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalShort": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "sum": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "$ref": "#/components/schemas/TerminalState"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTerminalShortBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTerminalShort"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicket": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "incident_start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "incident_duration": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tid_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "break_symptom_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "break_symptom_name": {
            "type": "string",
            "nullable": true
          },
          "break_reason_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "break_reason_name": {
            "type": "string",
            "nullable": true
          },
          "break_reason_comment": {
            "type": "string",
            "nullable": true
          },
          "is_write_off": {
            "type": "boolean",
            "nullable": true
          },
          "bank_name": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "replace_sim_operator": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "problem_location": {
            "type": "string",
            "nullable": true
          },
          "time_of_day_dependency": {
            "type": "string",
            "nullable": true
          },
          "network_signal_strength": {
            "$ref": "#/components/schemas/NetworkSignalStrength"
          },
          "connection_issue_date_time_from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "connection_issue_date_time_to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tid_received_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "repair_location_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_protocol": {
            "type": "string",
            "nullable": true
          },
          "machine_firmware": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/TicketState"
          },
          "ticket_type": {
            "$ref": "#/components/schemas/TicketType"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "$ref": "#/components/schemas/TicketColor"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "owner_inn": {
            "type": "string",
            "nullable": true
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "age": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "operator": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "operator_name": {
            "type": "string",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "score": {
            "$ref": "#/components/schemas/TicketScore"
          },
          "is_resolved": {
            "type": "boolean",
            "nullable": true
          },
          "repair_status": {
            "$ref": "#/components/schemas/TicketRepairStatus"
          },
          "close_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTicket"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketComment": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/TicketState"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "ticket_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_name": {
            "type": "string",
            "nullable": true
          },
          "from_vendista": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketCommentBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTicketComment"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketCommentItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTicketComment"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketFile": {
        "type": "object",
        "properties": {
          "ticket_id": {
            "type": "integer",
            "format": "int32"
          },
          "comment_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "file": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketFileBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTicketFile"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketFileItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTicketFile"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTicket"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketMove": {
        "type": "object",
        "properties": {
          "ticket_id": {
            "type": "integer",
            "format": "int32"
          },
          "ticket_type": {
            "$ref": "#/components/schemas/TicketType"
          },
          "from_operator": {
            "type": "integer",
            "format": "int32"
          },
          "from_operator_name": {
            "type": "string",
            "nullable": true
          },
          "to_operator": {
            "type": "integer",
            "format": "int32"
          },
          "to_operator_name": {
            "type": "string",
            "nullable": true
          },
          "move_reason": {
            "$ref": "#/components/schemas/TicketMoveReason"
          },
          "move_reason_name": {
            "type": "string",
            "nullable": true
          },
          "moved_user_id": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketMoveBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTicketMove"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketMoveReason": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketMoveReasonBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTicketMoveReason"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketsOperator": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "boolean"
          },
          "exclude_auto_attach": {
            "type": "boolean",
            "nullable": true
          },
          "ratio": {
            "type": "number",
            "format": "float"
          },
          "is_deleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "other": {
            "type": "boolean"
          },
          "add_tid": {
            "type": "boolean"
          },
          "acquiring_question": {
            "type": "boolean"
          },
          "support": {
            "type": "boolean"
          },
          "repair": {
            "type": "boolean"
          },
          "sim_replacement": {
            "type": "boolean"
          },
          "gsm": {
            "type": "boolean"
          },
          "acquiring_connection": {
            "type": "boolean"
          },
          "move_terminal": {
            "type": "boolean"
          },
          "machine_settings": {
            "type": "boolean"
          },
          "close_account": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketsOperatorBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTicketsOperator"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTicketsOperatorItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTicketsOperator"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTid": {
        "required": [
          "owner_id",
          "tid"
        ],
        "type": "object",
        "properties": {
          "tid": {
            "maxLength": 8,
            "minLength": 3,
            "type": "string"
          },
          "mid": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mcc": {
            "type": "integer",
            "format": "int32"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bank_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "terminal_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true,
            "readOnly": true
          },
          "terminal_ids_reserve": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true,
            "readOnly": true
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "certificate": {
            "type": "string",
            "format": "byte",
            "nullable": true,
            "writeOnly": true
          },
          "zip_code": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "area": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "settlement": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "klk": {
            "type": "string",
            "format": "byte",
            "nullable": true,
            "writeOnly": true
          },
          "processing_id": {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "state": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTidBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTid"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTidItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTid"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTransaction": {
        "type": "object",
        "properties": {
          "machine_item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTransactionMachineItem"
            },
            "nullable": true
          },
          "term_id": {
            "type": "integer",
            "format": "int32"
          },
          "sum": {
            "type": "integer",
            "format": "int32"
          },
          "rrn": {
            "type": "string",
            "nullable": true
          },
          "approval_number": {
            "type": "string",
            "nullable": true
          },
          "response_code": {
            "type": "integer",
            "format": "int32"
          },
          "terminal_id": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "result": {
            "type": "integer",
            "format": "int32"
          },
          "bank_delay": {
            "type": "integer",
            "format": "int32"
          },
          "total_server_delay": {
            "type": "integer",
            "format": "int32"
          },
          "total_client_delay": {
            "type": "integer",
            "format": "int32"
          },
          "mti": {
            "type": "string",
            "nullable": true
          },
          "reverse_id": {
            "type": "integer",
            "format": "int64"
          },
          "public_emv": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "division_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "terminal_comment": {
            "type": "string",
            "nullable": true
          },
          "processing": {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "card_number": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "bonus": {
            "type": "integer",
            "format": "int32"
          },
          "left_sum": {
            "type": "integer",
            "format": "int32"
          },
          "left_bonus": {
            "type": "integer",
            "format": "int32"
          },
          "merchant_id": {
            "type": "string",
            "nullable": true
          },
          "stan": {
            "type": "integer",
            "format": "int64"
          },
          "terminal_mac": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbTransactionBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbTransaction"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTransactionItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbTransaction"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbTransactionMachineItem": {
        "type": "object",
        "properties": {
          "machine_item_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "item_info": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "division_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expire": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "last_online_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "my_vendista": {
            "type": "boolean"
          },
          "partner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timezone": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "culture_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currency_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "original_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "partner_name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DbUserBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbUser"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbUserItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbUser"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbUserNotificationSettings": {
        "required": [
          "telegram_phone"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "telegram_phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "machine_disabled": {
            "type": "boolean"
          },
          "machine_enabled": {
            "type": "boolean"
          },
          "machine_power_off": {
            "type": "boolean"
          },
          "machine_power_on": {
            "type": "boolean"
          },
          "daily_report": {
            "type": "boolean"
          },
          "sale_bonus": {
            "type": "boolean"
          },
          "sale_return": {
            "type": "boolean"
          },
          "sale_return_part": {
            "type": "boolean"
          },
          "not_in_touch": {
            "type": "integer",
            "format": "int32"
          },
          "no_cash_sales": {
            "type": "integer",
            "format": "int32"
          },
          "no_cashless_sales": {
            "type": "integer",
            "format": "int32"
          },
          "success_cashless": {
            "type": "boolean"
          },
          "success_cash": {
            "type": "boolean"
          },
          "cashless_fail": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DbUserNotificationSettingsBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DbUserNotificationSettings"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DbUserNotificationSettingsItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/DbUserNotificationSettings"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountQrCreateModel": {
        "required": [
          "discount_type",
          "qr_code",
          "value"
        ],
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "discount_type": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "qr_code": {
            "minLength": 1,
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DiscountQrUpdateModel": {
        "required": [
          "count",
          "discount_type",
          "value"
        ],
        "type": "object",
        "properties": {
          "discount_type": {
            "maximum": 2,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DivisionCreateModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DivisionUpdateModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EncashTotal": {
        "type": "object",
        "properties": {
          "tube_sum": {
            "type": "integer",
            "format": "int32"
          },
          "encash_coins": {
            "type": "integer",
            "format": "int32"
          },
          "encash_banknotes": {
            "type": "integer",
            "format": "int32"
          },
          "encash": {
            "type": "integer",
            "format": "int32"
          },
          "cash_sales": {
            "type": "integer",
            "format": "int32"
          },
          "diff": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EventTotal": {
        "type": "object",
        "properties": {
          "sum": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "FileAttachmentModel": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "file": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterTextType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "FlasherIntervalsCreateModel": {
        "type": "object",
        "properties": {
          "flasher_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "start_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "end_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FlasherIntervalsUpdateModel": {
        "type": "object",
        "properties": {
          "start_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "end_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GSMQualityReportRow": {
        "type": "object",
        "properties": {
          "terminal_id": {
            "type": "integer",
            "format": "int32"
          },
          "imei": {
            "type": "integer",
            "format": "int64"
          },
          "sim_balance": {
            "type": "integer",
            "format": "int32"
          },
          "sim_number": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GSMQualityReportRowBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GSMQualityReportRow"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IngredientCreateUpdateModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "measure": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Int32ItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KassaCreateUpdateModel": {
        "type": "object",
        "properties": {
          "kassa_id": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kassa_token": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "orange_pfx": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "orange_rsa": {
            "maxLength": 5000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "orange_rsa_name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nds_type": {
            "type": "integer",
            "format": "int32"
          },
          "tax_regime": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "provider_id": {
            "type": "integer",
            "format": "int32"
          },
          "display_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "display_fns_qr": {
            "type": "boolean"
          },
          "ffd_version": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "place": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "enable_full_item_name": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MachineIngredientListUpdateModel": {
        "type": "object",
        "properties": {
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MachineIngredientUpdateModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MachineIngredientUpdateModel": {
        "type": "object",
        "properties": {
          "ingredient_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "loading": {
            "type": "integer",
            "format": "int32"
          },
          "critical": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MachineTotal": {
        "type": "object",
        "properties": {
          "working": {
            "type": "integer",
            "format": "int64"
          },
          "failed": {
            "type": "integer",
            "format": "int64"
          },
          "warning": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "MidCreateModel": {
        "required": [
          "owner_id"
        ],
        "type": "object",
        "properties": {
          "mid": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mcc": {
            "type": "integer",
            "format": "int32"
          },
          "currency_id": {
            "type": "integer",
            "format": "int32"
          },
          "country_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zip_code": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "area": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "settlement": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "merchant_name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sponsored_mid": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "processing_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MidUpdateModel": {
        "type": "object",
        "properties": {
          "mcc": {
            "type": "integer",
            "format": "int32"
          },
          "currency_id": {
            "type": "integer",
            "format": "int32"
          },
          "country_id": {
            "type": "integer",
            "format": "int32"
          },
          "zip_code": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "area": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "settlement": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "merchant_name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sponsored_mid": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NetworkSignalStrength": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "NfcTagCreateModel": {
        "required": [
          "action_id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "action_id": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "tid": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "parameter": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NfcTagUpdateModel": {
        "required": [
          "action_id",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "action_id": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "tid": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "parameter": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorsCommonReportResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/OperatorsCommonReportTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatorsCommonReportRow"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorsCommonReportRow": {
        "type": "object",
        "properties": {
          "operator_id": {
            "type": "integer",
            "format": "int32"
          },
          "operator_name": {
            "type": "string",
            "nullable": true
          },
          "attached_count": {
            "type": "integer",
            "format": "int32"
          },
          "answered_count": {
            "type": "integer",
            "format": "int32"
          },
          "moved_count": {
            "type": "integer",
            "format": "int32"
          },
          "closed_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OperatorsCommonReportTotal": {
        "type": "object",
        "properties": {
          "attached_count": {
            "type": "integer",
            "format": "int32"
          },
          "answered_count": {
            "type": "integer",
            "format": "int32"
          },
          "moved_count": {
            "type": "integer",
            "format": "int32"
          },
          "closed_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OperatorsNowReportResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/OperatorsNowReportTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatorsNowReportRow"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorsNowReportRow": {
        "type": "object",
        "properties": {
          "operator_id": {
            "type": "integer",
            "format": "int32"
          },
          "operator_name": {
            "type": "string",
            "nullable": true
          },
          "active_count": {
            "type": "integer",
            "format": "int32"
          },
          "red_count": {
            "type": "integer",
            "format": "int32"
          },
          "yellow_count": {
            "type": "integer",
            "format": "int32"
          },
          "green_count": {
            "type": "integer",
            "format": "int32"
          },
          "cur_month_closed_count": {
            "type": "integer",
            "format": "int32"
          },
          "prev_month_closed_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OperatorsNowReportTotal": {
        "type": "object",
        "properties": {
          "active_count": {
            "type": "integer",
            "format": "int32"
          },
          "red_count": {
            "type": "integer",
            "format": "int32"
          },
          "yellow_count": {
            "type": "integer",
            "format": "int32"
          },
          "green_count": {
            "type": "integer",
            "format": "int32"
          },
          "cur_month_closed_count": {
            "type": "integer",
            "format": "int32"
          },
          "prev_month_closed_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OperatorsScoresReportResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/OperatorsScoresReportTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OperatorsScoresReportRow"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OperatorsScoresReportRow": {
        "type": "object",
        "properties": {
          "operator_id": {
            "type": "integer",
            "format": "int32"
          },
          "operator_name": {
            "type": "string",
            "nullable": true
          },
          "not_set_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "one_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "two_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "three_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "four_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "five_score_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OperatorsScoresReportTotal": {
        "type": "object",
        "properties": {
          "not_set_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "one_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "two_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "three_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "four_score_count": {
            "type": "integer",
            "format": "int32"
          },
          "five_score_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrganizationAddress": {
        "type": "object",
        "properties": {
          "zip_code": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "settlement_type": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "location": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "street_type": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "building_number": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "block_number": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "room_number": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "full_address": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationInfo": {
        "type": "object",
        "properties": {
          "org_type": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "opf_classifier": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "org_full_name": {
            "maxLength": 320,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "org_short_name": {
            "maxLength": 320,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "org_short_name_lat": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "public_authority": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kpp": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ogrn": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ogrn_issue_date": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "main_okved": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "oktmo": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "legal_address": {
            "$ref": "#/components/schemas/OrganizationAddress"
          },
          "actual_address": {
            "$ref": "#/components/schemas/OrganizationAddress"
          }
        },
        "additionalProperties": false
      },
      "OrganizationInfoWithInn": {
        "type": "object",
        "properties": {
          "inn": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "org_type": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "opf_classifier": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "org_full_name": {
            "maxLength": 320,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "org_short_name": {
            "maxLength": 320,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "org_short_name_lat": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "public_authority": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kpp": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ogrn": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ogrn_issue_date": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "main_okved": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "oktmo": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "legal_address": {
            "$ref": "#/components/schemas/OrganizationAddress"
          },
          "actual_address": {
            "$ref": "#/components/schemas/OrganizationAddress"
          }
        },
        "additionalProperties": false
      },
      "OrganizationInfo_DaMIA": {
        "type": "object",
        "properties": {
          "okato_reg": {
            "type": "string",
            "nullable": true
          },
          "oktmo_reg": {
            "type": "string",
            "nullable": true
          },
          "okato_fact": {
            "type": "string",
            "nullable": true
          },
          "oktmo_fact": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Owner": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "contact_name": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contact_surname": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contact_patronym": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "terminals_count": {
            "maximum": 10000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "bonus_percent": {
            "type": "number",
            "format": "float"
          },
          "org_phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "organization_info_actual": {
            "$ref": "#/components/schemas/OrganizationInfo"
          },
          "organization_info_initial": {
            "$ref": "#/components/schemas/OrganizationInfo"
          },
          "director_post": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "director_phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "director_email": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "director_info_actual": {
            "$ref": "#/components/schemas/Passport"
          },
          "director_info_initial": {
            "$ref": "#/components/schemas/Passport"
          },
          "bank_account": {
            "$ref": "#/components/schemas/BankAccountInfo"
          },
          "accept_processing": {
            "type": "boolean"
          },
          "web_site": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "store_name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "store_address": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "qr_provider_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "telegram_bot_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "telegram_name": {
            "type": "string",
            "nullable": true
          },
          "disable_firmware_updates": {
            "type": "boolean"
          },
          "disable_set_up_qr": {
            "type": "boolean"
          },
          "service_without_agreement": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 320,
            "minLength": 3,
            "type": "string"
          },
          "telegram_phone": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/OwnerState"
          },
          "inn": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "type_of_business": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contact_phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contact_email": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "main_owner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "partner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "partner_name": {
            "type": "string",
            "nullable": true
          },
          "business_type_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commission_rate": {
            "type": "number",
            "format": "float"
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "type": "integer",
            "format": "int32"
          },
          "creator_name": {
            "type": "string",
            "nullable": true
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "modify_time": {
            "type": "string",
            "format": "date-time"
          },
          "fee_disabled": {
            "type": "boolean",
            "nullable": true
          },
          "fee_disabled_reason_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clients_fee_disabled": {
            "type": "boolean",
            "nullable": true
          },
          "fee_disabled_from_partner": {
            "type": "boolean"
          },
          "culture_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currency_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OwnerFilesStatus": {
        "type": "object",
        "properties": {
          "passport_page1": {
            "type": "boolean"
          },
          "passport_page2": {
            "type": "boolean"
          },
          "lease_contract": {
            "type": "boolean"
          },
          "oferta": {
            "type": "boolean"
          },
          "pda": {
            "type": "boolean"
          },
          "registration_request_vtb": {
            "type": "boolean"
          },
          "contract_request_vtb": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OwnerFilesStatusItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/OwnerFilesStatus"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OwnerShort": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 320,
            "minLength": 3,
            "type": "string"
          },
          "telegram_phone": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/OwnerState"
          },
          "inn": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "type_of_business": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contact_phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contact_email": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "main_owner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "partner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "partner_name": {
            "type": "string",
            "nullable": true
          },
          "business_type_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "commission_rate": {
            "type": "number",
            "format": "float"
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "created_by": {
            "type": "integer",
            "format": "int32"
          },
          "creator_name": {
            "type": "string",
            "nullable": true
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "modify_time": {
            "type": "string",
            "format": "date-time"
          },
          "fee_disabled": {
            "type": "boolean",
            "nullable": true
          },
          "fee_disabled_reason_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clients_fee_disabled": {
            "type": "boolean",
            "nullable": true
          },
          "fee_disabled_from_partner": {
            "type": "boolean"
          },
          "culture_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currency_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OwnerShortBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OwnerShort"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OwnerState": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          999
        ],
        "type": "integer",
        "format": "int32"
      },
      "PacketLog": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "nullable": true
          },
          "packet_type": {
            "type": "string",
            "nullable": true
          },
          "packet_sub_type": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "server_port": {
            "type": "integer",
            "format": "int32"
          },
          "session_id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PacketLogBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PacketLog"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Passport": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "surname": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "patronym": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "birth_date": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "birth_place": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "citizenship": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "type": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "series": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "number": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "date_of_issue": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "issued_by": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "department_code": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "zip_code": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "settlement_type": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "location": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "street_type": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "building_number": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "block_number": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "room_number": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "full_address": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentProvider": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          111,
          112,
          113,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          210,
          211,
          212,
          213,
          214,
          215,
          217,
          218
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProductCreateUpdateModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "full_name": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "recipe_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "barcode": {
            "maximum": 9999999999999,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "gtin": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "is_ingredient": {
            "type": "boolean"
          },
          "nds_type": {
            "type": "integer",
            "format": "int32"
          },
          "subject_type": {
            "maximum": 33,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "cost_type": {
            "$ref": "#/components/schemas/CostType"
          },
          "supplier_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QrSettingsCreateUpdateModel": {
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "provider_id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "client_id": {
            "type": "string",
            "nullable": true
          },
          "secret_key": {
            "type": "string",
            "nullable": true
          },
          "member_id": {
            "type": "string",
            "nullable": true
          },
          "certificate": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "private_key": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "additional_parameter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecoverPassword": {
        "required": [
          "code",
          "confirm_password",
          "new_password"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 32,
            "minLength": 16,
            "type": "string"
          },
          "new_password": {
            "maxLength": 32,
            "minLength": 5,
            "type": "string"
          },
          "confirm_password": {
            "maxLength": 32,
            "minLength": 5,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RecoverPasswordRequest": {
        "required": [
          "login"
        ],
        "type": "object",
        "properties": {
          "login": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegisterOwnerModel": {
        "required": [
          "contact_email",
          "contact_phone",
          "inn",
          "org_short_name"
        ],
        "type": "object",
        "properties": {
          "without_fns": {
            "type": "boolean"
          },
          "org_short_name": {
            "maxLength": 320,
            "minLength": 0,
            "type": "string"
          },
          "comment": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "inn": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "contact_email": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "currency_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "culture_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contact_phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          10,
          999
        ],
        "type": "integer",
        "format": "int32"
      },
      "ShortRegisterOwnerModel": {
        "required": [
          "contact_email",
          "contact_phone",
          "inn"
        ],
        "type": "object",
        "properties": {
          "without_fns": {
            "type": "boolean"
          },
          "org_short_name": {
            "maxLength": 320,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "inn": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "contact_email": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "currency_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "culture_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contact_phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StringItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionBalanceDetails": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "integer",
            "format": "int32"
          },
          "debt_time_stamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "max_debt_days": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionBalanceDetailsItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/SubscriptionBalanceDetails"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionCreateUpdateModel": {
        "required": [
          "owner_id"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "debit": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "credit": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionFeeReportResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "month",
          "page_number",
          "total",
          "year"
        ],
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "$ref": "#/components/schemas/SubscriptionFeeReportTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionFeeReportRow"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionFeeReportRow": {
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "owner_inn": {
            "type": "string",
            "nullable": true
          },
          "owner_is_partner": {
            "type": "boolean"
          },
          "fee_disabled": {
            "type": "boolean"
          },
          "fee_disabled_from_partner": {
            "type": "boolean"
          },
          "active_terminals_count": {
            "type": "integer",
            "format": "int32"
          },
          "active_paidsim_terminals_count": {
            "type": "integer",
            "format": "int32"
          },
          "terminals_count": {
            "type": "integer",
            "format": "int32"
          },
          "paidsim_terminals_count": {
            "type": "integer",
            "format": "int32"
          },
          "subscription_fee_sum": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionFeeReportTotal": {
        "type": "object",
        "properties": {
          "active_terminals_count": {
            "type": "integer",
            "format": "int32"
          },
          "active_paidsim_terminals_count": {
            "type": "integer",
            "format": "int32"
          },
          "terminals_count": {
            "type": "integer",
            "format": "int32"
          },
          "paidsim_terminals_count": {
            "type": "integer",
            "format": "int32"
          },
          "subscription_fee_sum": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionFeeSettings": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "external_server_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionTotal": {
        "type": "object",
        "properties": {
          "start_balance": {
            "type": "integer",
            "format": "int32"
          },
          "end_balance": {
            "type": "integer",
            "format": "int32"
          },
          "debit_sum": {
            "type": "integer",
            "format": "int64"
          },
          "credit_sum": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SupplierAgentType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "SupplierCreateUpdateModel": {
        "required": [
          "agent_type"
        ],
        "type": "object",
        "properties": {
          "agent_type": {
            "$ref": "#/components/schemas/SupplierAgentType"
          },
          "supplier_inn": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "supplier_name": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "supplier_phone": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "pay_transfer_operator_phone": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "pay_agent_operation": {
            "maxLength": 24,
            "type": "string",
            "nullable": true
          },
          "pay_agent_phone": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "pay_operator_phone": {
            "maxLength": 45,
            "type": "string",
            "nullable": true
          },
          "pay_operator_name": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "pay_operator_address": {
            "maxLength": 240,
            "type": "string",
            "nullable": true
          },
          "pay_operator_inn": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TerminalAttachModel": {
        "required": [
          "mac"
        ],
        "type": "object",
        "properties": {
          "mac": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TerminalCommand": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          66,
          67,
          68,
          70,
          71,
          73,
          74,
          200,
          201,
          202,
          210,
          211,
          212,
          213
        ],
        "type": "integer",
        "format": "int32"
      },
      "TerminalExtCreateUpdateModel": {
        "type": "object",
        "properties": {
          "car_wash_type": {
            "$ref": "#/components/schemas/CarWashType"
          },
          "ble_uuid": {
            "type": "string",
            "nullable": true
          },
          "machine_type_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_type_name": {
            "type": "string",
            "nullable": true
          },
          "machine_manufacturer_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_manufacturer_name": {
            "type": "string",
            "nullable": true
          },
          "machine_model_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_model_name": {
            "type": "string",
            "nullable": true
          },
          "machine_firmware_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_firmware_version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TerminalOwnerFileCreateUpdateModel": {
        "required": [
          "data",
          "file_id"
        ],
        "type": "object",
        "properties": {
          "file_id": {
            "$ref": "#/components/schemas/TerminalOwnerFileType"
          },
          "comment": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "data": {
            "maxLength": 16777216,
            "type": "string",
            "format": "byte"
          },
          "terminal_type": {
            "type": "integer",
            "format": "int32"
          },
          "fw_type_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "offset_x": {
            "maximum": 65535,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "offset_y": {
            "maximum": 65535,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TerminalOwnerFileType": {
        "enum": [
          0,
          1,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "type": "integer",
        "format": "int32"
      },
      "TerminalSettingsTemplateCreateModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TerminalState": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "TerminalUpdateModel": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string",
            "nullable": true
          },
          "tid": {
            "type": "string",
            "nullable": true
          },
          "mid": {
            "type": "string",
            "nullable": true
          },
          "processing_id": {
            "type": "integer",
            "format": "int32"
          },
          "reserve_tid_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "external_server_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sber_qrid": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "auto_cancel_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "bonus_percent": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "bonus_transactions": {
            "type": "boolean",
            "nullable": true
          },
          "qr_discount_percent": {
            "type": "number",
            "format": "float"
          },
          "send_cash": {
            "type": "boolean"
          },
          "send_cashless": {
            "type": "boolean"
          },
          "sim_balance": {
            "type": "integer",
            "format": "int32"
          },
          "division_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "success_message": {
            "maxLength": 197,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "success_message_timeout": {
            "type": "integer",
            "format": "int32"
          },
          "fw_type": {
            "type": "integer",
            "format": "int32"
          },
          "disable_firmware_updates": {
            "type": "boolean"
          },
          "kassa_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "generate_eva_dts_report": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TerminalsServiceReportRow": {
        "type": "object",
        "properties": {
          "terminal_id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "type_name": {
            "type": "string",
            "nullable": true
          },
          "fw_type": {
            "type": "integer",
            "format": "int32"
          },
          "fw_type_description": {
            "type": "string",
            "nullable": true
          },
          "main_mode": {
            "type": "integer",
            "format": "int32"
          },
          "bootloader_version": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "last_hour_online": {
            "type": "integer",
            "format": "int32"
          },
          "last_online_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "inn": {
            "type": "string",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "nullable": true
          },
          "contact_phone": {
            "type": "string",
            "nullable": true
          },
          "contact_name": {
            "type": "string",
            "nullable": true
          },
          "contact_surname": {
            "type": "string",
            "nullable": true
          },
          "contact_patronym": {
            "type": "string",
            "nullable": true
          },
          "partner_name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TerminalsServiceReportRowBaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerminalsServiceReportRow"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TerminalsSwapTidsModel": {
        "type": "object",
        "properties": {
          "swapped_count": {
            "type": "integer",
            "format": "int32"
          },
          "leave_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TerminalsSwapTidsModelItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/TerminalsSwapTidsModel"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketColor": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "TicketCommentCreateModel": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "attachments": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileAttachmentModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketCreateModel": {
        "required": [
          "subject",
          "ticket_type"
        ],
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "ticket_type": {
            "$ref": "#/components/schemas/TicketType"
          },
          "subject": {
            "maxLength": 128,
            "minLength": 5,
            "type": "string"
          },
          "description": {
            "maxLength": 10000,
            "type": "string",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "incident_start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "incident_duration": {
            "maximum": 600,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tid_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachments": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileAttachmentModel"
            },
            "nullable": true
          },
          "break_symptom_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "replace_sim_operator": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "problem_location": {
            "type": "string",
            "nullable": true
          },
          "time_of_day_dependency": {
            "type": "string",
            "nullable": true
          },
          "network_signal_strength": {
            "$ref": "#/components/schemas/NetworkSignalStrength"
          },
          "connection_issue_date_time_from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "connection_issue_date_time_to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_protocol": {
            "type": "string",
            "nullable": true
          },
          "machine_firmware": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketFileCreateModel": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "file": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketMoveCreateModel": {
        "required": [
          "move_reason",
          "to_operator"
        ],
        "type": "object",
        "properties": {
          "to_operator": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "move_reason": {
            "$ref": "#/components/schemas/TicketMoveReason"
          },
          "comment": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketMoveReason": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "TicketRepairStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "TicketScore": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "TicketState": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "TicketType": {
        "enum": [
          0,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "TicketTypesCommonReportResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/TicketTypesCommonReportTotal"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketTypesCommonReportRow"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketTypesCommonReportRow": {
        "type": "object",
        "properties": {
          "ticket_type": {
            "$ref": "#/components/schemas/TicketType"
          },
          "attached_count": {
            "type": "integer",
            "format": "int32"
          },
          "answered_count": {
            "type": "integer",
            "format": "int32"
          },
          "moved_count": {
            "type": "integer",
            "format": "int32"
          },
          "closed_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TicketTypesCommonReportTotal": {
        "type": "object",
        "properties": {
          "attached_count": {
            "type": "integer",
            "format": "int32"
          },
          "answered_count": {
            "type": "integer",
            "format": "int32"
          },
          "moved_count": {
            "type": "integer",
            "format": "int32"
          },
          "closed_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TicketUpdateModel": {
        "required": [
          "state",
          "subject",
          "ticket_type"
        ],
        "type": "object",
        "properties": {
          "ticket_type": {
            "$ref": "#/components/schemas/TicketType"
          },
          "state": {
            "$ref": "#/components/schemas/TicketState"
          },
          "subject": {
            "maxLength": 128,
            "minLength": 5,
            "type": "string"
          },
          "description": {
            "maxLength": 10000,
            "type": "string",
            "nullable": true
          },
          "terminal_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "incident_start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "incident_duration": {
            "maximum": 600,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tid_count": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachments": {
            "maxItems": 5,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileAttachmentModel"
            },
            "nullable": true
          },
          "break_symptom_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "break_reason_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "break_reason_comment": {
            "type": "string",
            "nullable": true
          },
          "repair_status": {
            "$ref": "#/components/schemas/TicketRepairStatus"
          },
          "is_write_off": {
            "type": "boolean",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "replace_sim_operator": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "problem_location": {
            "type": "string",
            "nullable": true
          },
          "time_of_day_dependency": {
            "type": "string",
            "nullable": true
          },
          "network_signal_strength": {
            "$ref": "#/components/schemas/NetworkSignalStrength"
          },
          "connection_issue_date_time_from": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "connection_issue_date_time_to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "repair_location_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "machine_protocol": {
            "type": "string",
            "nullable": true
          },
          "machine_firmware": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketsOperatorCreateModel": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "exclude_auto_attach": {
            "type": "boolean",
            "nullable": true
          },
          "other": {
            "type": "boolean"
          },
          "add_tid": {
            "type": "boolean"
          },
          "acquiring_question": {
            "type": "boolean"
          },
          "support": {
            "type": "boolean"
          },
          "repair": {
            "type": "boolean"
          },
          "sim_replacement": {
            "type": "boolean"
          },
          "gsm": {
            "type": "boolean"
          },
          "acquiring_connection": {
            "type": "boolean"
          },
          "move_terminal": {
            "type": "boolean"
          },
          "machine_settings": {
            "type": "boolean"
          },
          "close_account": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TicketsOperatorUpdateModel": {
        "type": "object",
        "properties": {
          "state": {
            "type": "boolean"
          },
          "exclude_auto_attach": {
            "type": "boolean",
            "nullable": true
          },
          "other": {
            "type": "boolean"
          },
          "add_tid": {
            "type": "boolean"
          },
          "acquiring_question": {
            "type": "boolean"
          },
          "support": {
            "type": "boolean"
          },
          "repair": {
            "type": "boolean"
          },
          "sim_replacement": {
            "type": "boolean"
          },
          "gsm": {
            "type": "boolean"
          },
          "acquiring_connection": {
            "type": "boolean"
          },
          "move_terminal": {
            "type": "boolean"
          },
          "machine_settings": {
            "type": "boolean"
          },
          "close_account": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TidCreateModel": {
        "required": [
          "tid"
        ],
        "type": "object",
        "properties": {
          "tid": {
            "maxLength": 8,
            "minLength": 3,
            "type": "string"
          },
          "mid": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mcc": {
            "type": "integer",
            "format": "int32"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "owner_inn": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "zip_code": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "area": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "settlement": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "processing_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TidUpdateModel": {
        "type": "object",
        "properties": {
          "mcc": {
            "type": "integer",
            "format": "int32"
          },
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "bank_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "zip_code": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "area": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "settlement": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenOrSendCodeResult": {
        "type": "object",
        "properties": {
          "verification_code_sended": {
            "type": "boolean"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TokenResult": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransactionsDurationReportResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "$ref": "#/components/schemas/TransactionsDurationTotalRow"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionsDurationReportRow"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionsDurationReportRow": {
        "type": "object",
        "properties": {
          "owner_id": {
            "type": "integer",
            "format": "int32"
          },
          "owner_name": {
            "type": "string",
            "nullable": true
          },
          "terminals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionsDurationReportSubRow"
            },
            "nullable": true
          },
          "transactions_count": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less5": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less10": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less20": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less30": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_over30": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransactionsDurationReportSubRow": {
        "type": "object",
        "properties": {
          "terminal_id": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less5": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less10": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less20": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less30": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_over30": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransactionsDurationTotalRow": {
        "type": "object",
        "properties": {
          "transactions_count": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less5": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less10": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less20": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_less30": {
            "type": "integer",
            "format": "int32"
          },
          "transactions_count_over30": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UInt32ArrayItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UInt32BaseQueryResult": {
        "required": [
          "items",
          "items_count",
          "items_per_page",
          "page_number"
        ],
        "type": "object",
        "properties": {
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "items_per_page": {
            "type": "integer",
            "format": "int32"
          },
          "items_count": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UInt32ItemResult": {
        "type": "object",
        "properties": {
          "item": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserAgreementModel": {
        "type": "object",
        "properties": {
          "accept": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserChangePassword": {
        "required": [
          "confirm_password",
          "new_password",
          "old_password"
        ],
        "type": "object",
        "properties": {
          "old_password": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string"
          },
          "new_password": {
            "maxLength": 32,
            "minLength": 5,
            "type": "string"
          },
          "confirm_password": {
            "maxLength": 32,
            "minLength": 5,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserCreateModel": {
        "required": [
          "email",
          "login",
          "name",
          "owner_id",
          "role"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 320,
            "minLength": 5,
            "type": "string"
          },
          "login": {
            "maxLength": 128,
            "minLength": 5,
            "type": "string"
          },
          "email": {
            "maxLength": 128,
            "minLength": 5,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "password": {
            "maxLength": 32,
            "type": "string",
            "nullable": true
          },
          "owner_id": {
            "maximum": 4294967295,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "division_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timezone": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "my_vendista": {
            "type": "boolean"
          },
          "culture_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currency_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserNotificationSettingsCreateModel": {
        "required": [
          "telegram_phone"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean"
          },
          "telegram_phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "machine_disabled": {
            "type": "boolean"
          },
          "machine_enabled": {
            "type": "boolean"
          },
          "machine_power_off": {
            "type": "boolean"
          },
          "machine_power_on": {
            "type": "boolean"
          },
          "daily_report": {
            "type": "boolean"
          },
          "sale_bonus": {
            "type": "boolean"
          },
          "sale_return": {
            "type": "boolean"
          },
          "sale_return_part": {
            "type": "boolean"
          },
          "not_in_touch": {
            "type": "integer",
            "format": "int32"
          },
          "no_cash_sales": {
            "type": "integer",
            "format": "int32"
          },
          "no_cashless_sales": {
            "type": "integer",
            "format": "int32"
          },
          "success_cashless": {
            "type": "boolean"
          },
          "success_cash": {
            "type": "boolean"
          },
          "cashless_fail": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserNotificationSettingsUpdateModel": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "telegram_phone": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "machine_disabled": {
            "type": "boolean"
          },
          "machine_enabled": {
            "type": "boolean"
          },
          "machine_power_off": {
            "type": "boolean"
          },
          "machine_power_on": {
            "type": "boolean"
          },
          "daily_report": {
            "type": "boolean"
          },
          "sale_bonus": {
            "type": "boolean"
          },
          "sale_return": {
            "type": "boolean"
          },
          "sale_return_part": {
            "type": "boolean"
          },
          "not_in_touch": {
            "type": "integer",
            "format": "int32"
          },
          "no_cash_sales": {
            "type": "integer",
            "format": "int32"
          },
          "no_cashless_sales": {
            "type": "integer",
            "format": "int32"
          },
          "success_cashless": {
            "type": "boolean"
          },
          "success_cash": {
            "type": "boolean"
          },
          "cashless_fail": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UserUpdateModel": {
        "required": [
          "email",
          "login",
          "name",
          "role"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 320,
            "minLength": 5,
            "type": "string"
          },
          "login": {
            "maxLength": 128,
            "minLength": 5,
            "type": "string"
          },
          "email": {
            "maxLength": 128,
            "minLength": 5,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "role": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "division_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timezone": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "my_vendista": {
            "type": "boolean"
          },
          "culture_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currency_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}